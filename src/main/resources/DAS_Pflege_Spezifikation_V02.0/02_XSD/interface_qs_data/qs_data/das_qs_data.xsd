<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:das="https://www.das-pflege.de" elementFormDefault="qualified" vc:minVersion="1.1" xpathDefaultNamespace="##targetNamespace">
	<xs:include schemaLocation="das_qs_datatypes.xsd"/>
	<xs:complexType name="das_qs_data_type">
		<xs:annotation>
			<xs:documentation>Erhebungsbogen zur Erfassung von Versorgungsergebnissen der
				stationären Langzeitpflege</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="IDBEWOHNER">
				<xs:annotation>
					<xs:documentation>Bewohnerbezogene Nummer</xs:documentation>
					<xs:appinfo>
						<das:ref_number>1</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="[0-9]{6}"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="WOHNBEREICH">
				<xs:annotation>
					<xs:documentation>Wohnbereich</xs:documentation>
					<xs:appinfo>
						<das:ref_number>2</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_wohnbereich_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="ERHEBUNGSDATUM">
				<xs:annotation>
					<xs:documentation>Datum der Ergebniserfassung</xs:documentation>
					<xs:appinfo>
						<das:ref_number>3</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="EINZUGSDATUM">
				<xs:annotation>
					<xs:documentation>Datum des Einzugs (Beginn der vollstationären Langzeitpflege)</xs:documentation>
					<xs:appinfo>
						<das:ref_number>4</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GEBURTSMONAT">
				<xs:annotation>
					<xs:documentation>Geburtsmonat</xs:documentation>
					<xs:appinfo>
						<das:ref_number>5</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_monat_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GEBURTSJAHR">
				<xs:annotation>
					<xs:documentation>Geburtsjahr</xs:documentation>
					<xs:appinfo>
						<das:ref_number>6</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:gYear">
								<xs:minInclusive value="1900"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="PFLEGEGRAD">
				<xs:annotation>
					<xs:documentation>Ist ein Pflegegrad vorhanden?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>7</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="APOPLEX">
				<xs:annotation>
					<xs:documentation>Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Apoplex gekommen?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>8</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="APOPLEXDATUM">
				<xs:annotation>
					<xs:documentation>Datum des Apoplex</xs:documentation>
					<xs:appinfo>
						<das:ref_number>9</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
						<das:guideline>
							<div>
								<p>Wenn das genaue Datum nicht bekannt ist, geben Sie bitte die Mitte des betreffenden Monats an (z.B. 15.01.2020).</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="FRAKTUR">
				<xs:annotation>
					<xs:documentation>Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Fraktur gekommen?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>10</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="FRAKTURDATUM">
				<xs:annotation>
					<xs:documentation>Datum der Fraktur</xs:documentation>
					<xs:appinfo>
						<das:ref_number>11</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
						<das:guideline>
							<div>
								<p>Wenn das genaue Datum nicht bekannt ist, geben Sie bitte die Mitte des betreffenden Monats an (z.B. 15.01.2020).</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="HERZINFARKT">
				<xs:annotation>
					<xs:documentation>Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Herzinfarkt gekommen?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>12</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="HERZINFARKTDATUM">
				<xs:annotation>
					<xs:documentation>Datum des Herzinfarkts</xs:documentation>
					<xs:appinfo>
						<das:ref_number>13</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
						<das:guideline>
							<div>
								<p>Wenn das genaue Datum nicht bekannt ist, geben Sie bitte die Mitte des betreffenden Monats an (z.B. 15.01.2020).</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="AMPUTATION">
				<xs:annotation>
					<xs:documentation>Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Amputation gekommen?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>14</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
						<das:guideline>
							<div>
								<p>Angesprochen ist hier jede Art der Abtrennung von Extremitäten und Gliedern der Extremitäten, also beispielsweise auch die chirurgische Entfernung des großen Zehs.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="AMPUTATIONDATUM">
				<xs:annotation>
					<xs:documentation>Datum der Amputation</xs:documentation>
					<xs:appinfo>
						<das:ref_number>15</das:ref_number>
						<das:caption_id>1</das:caption_id>
						<das:caption_header>Allgemeine Angaben</das:caption_header>
						<das:guideline>
							<div>
								<p>Wenn das genaue Datum nicht bekannt ist, geben Sie bitte die Mitte des betreffenden Monats an (z.B. 15.01.2020).</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KHBEHANDLUNG">
				<xs:annotation>
					<xs:documentation>Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>16</das:ref_number>
						<das:caption_id>2</das:caption_id>
						<das:caption_header>Krankenhausbehandlung</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jnAnzahl_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KHBEGINNDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)</xs:documentation>
					<xs:appinfo>
						<das:ref_number>17</das:ref_number>
						<das:caption_id>2</das:caption_id>
						<das:caption_header>Krankenhausbehandlung</das:caption_header>
						<das:guideline>
							<div>
								<p>Bei mehreren Krankenhausaufenthalten geben Sie bitte die Datumsangaben zu dem Aufenthalt mit der längsten Dauer an.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KHENDEDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)</xs:documentation>
					<xs:appinfo>
						<das:ref_number>18</das:ref_number>
						<das:caption_id>2</das:caption_id>
						<das:caption_header>Krankenhausbehandlung</das:caption_header>
						<das:guideline>
							<div>
								<p>Bei mehreren Krankenhausaufenthalten geben Sie bitte die Datumsangaben zu dem Aufenthalt mit der längsten Dauer an.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="BEWUSSTSEINSZUSTAND">
				<xs:annotation>
					<xs:documentation>Bewusstseinszustand des Bewohners bzw. der Bewohnerin</xs:documentation>
					<xs:appinfo>
						<das:ref_number>19</das:ref_number>
						<das:caption_id>2</das:caption_id>
						<das:caption_header>Krankenhausbehandlung</das:caption_header>
						<das:guideline>
							<div>
								<p>Anzugeben ist hier die für den Bewohner bzw. die Bewohnerin charakteristische Situation, nicht eine Ausnahmesituation, die z.B. aufgrund einer akuten Erkrankung auftreten kann. Steht die Verschlechterung in keinem Zusammenhang mit einer Ausnahmesituation, so ist davon auszugehen, dass es sich um einen bleibenden Zustand („charakteristisch“) handelt. Bitte geben Sie an, welche der folgenden Zustandsbeschreibungen auf den Bewusstseinszustand des Bewohners bzw. der Bewohnerin am besten zutrifft:</p>
								<p>
									<b>wach</b>
								</p>
								<p>Der Bewohner bzw. die Bewohnerin ist ansprechbar und kann an Aktivitäten teilnehmen.</p>
								<p>
									<b>schläfrig</b>
								</p>
								<p>Der Bewohner bzw. die Bewohnerin ist ansprechbar und gut erweckbar, wirkt jedoch müde und ist verlangsamt in seinen Handlungen.</p>
								<p>
									<b>somnolent</b>
								</p>
								<p>Der Bewohner bzw. die Bewohnerin ist sehr schläfrig und kann nur durch starke äußere Reize geweckt werden (z.B. kräftiges Rütteln an der Schulter oder mehrfaches, sehr lautes Ansprechen).</p>
								<p>
									<b>komatös</b>
								</p>
								<p>Der Bewohner bzw. die Bewohnerin kann durch äußere Reize nicht mehr geweckt werden.</p>
								<p>
									<b>Wachkoma</b>
								</p>
								<p>Dies trifft nur dann zu, wenn eine ärztliche Diagnose vorliegt.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_bewusstseinszustand_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DIAGNOSEN" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Ärztliche Diagnosen für den Bewohner bzw. die Bewohnerin</xs:documentation>
					<xs:appinfo>
						<das:ref_number>20</das:ref_number>
						<das:caption_id>2</das:caption_id>
						<das:caption_header>Krankenhausbehandlung</das:caption_header>
						<das:guideline>
							<div>
								<p>Bitte geben Sie nur diejenigen Punkte an, zu denen eine ärztliche Diagnose auch tatsächlich vorliegt.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_diagnose_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="MOBILPOSWECHSEL">
				<xs:annotation>
					<xs:documentation>Positionswechsel im Bett</xs:documentation>
					<xs:appinfo>
						<das:ref_number>21</das:ref_number>
						<das:caption_id>3</das:caption_id>
						<das:caption_header>BI-Modul 1: Mobilität</das:caption_header>
						<das:guideline>
							<div>
								<p>Einnehmen von verschiedenen Positionen im Bett, Drehen um die Längsachse, Aufrichten aus dem Liegen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Selbständig ist auch eine Person, die ihre Position unter Nutzung von Hilfsmitteln (Aufrichthilfe, Bettseitenteil, Strickleiter, elektrisch verstellbares Bett) allein verändern kann.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann beispielsweise nach Anreichen eines Hilfsmittels oder Reichen der Hand ihre Lage im Bett verändern.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann beim Positionswechsel nur wenig mithelfen, z.B. auf den Rücken rollen, am Bettgestell festhalten, Aufforderungen folgen wie z. B. „Bitte die Arme vor der Brust verschränken und den Kopf auf die Brust legen.“</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann sich beim Positionswechsel nicht oder nur minimal beteiligen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="MOBILSITZPOSITION">
				<xs:annotation>
					<xs:documentation>Halten einer stabilen Sitzposition</xs:documentation>
					<xs:appinfo>
						<das:ref_number>22</das:ref_number>
						<das:caption_id>3</das:caption_id>
						<das:caption_header>BI-Modul 1: Mobilität</das:caption_header>
						<das:guideline>
							<div>
								<p>Sich auf einem Bett, Stuhl oder Sessel aufrecht halten.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Selbständig ist eine Person auch dann, wenn sie beim Sitzen gelegentlich ihre Sitzposition korrigieren muss.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann sich nur kurz, z.B. für die Dauer einer Mahlzeit oder eines Waschvorgangs selbständig in der Sitzposition halten, darüber hinaus benötigt sie aber personelle Unterstützung zur Positionskorrektur.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann sich wegen eingeschränkter Rumpfkontrolle auch mit Rücken- und Seitenstütze nicht in aufrechter Position halten und benötigt auch während der Dauer einer Mahlzeit oder eines Waschvorgangs personelle Unterstützung zur Positionskorrektur.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann sich nicht in Sitzposition halten. Bei fehlender Rumpf- und Kopfkontrolle kann die Person nur im Bett oder Lagerungsstuhl liegend gelagert werden.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="MOBILUMSETZEN">
				<xs:annotation>
					<xs:documentation>Sich Umsetzen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>23</das:ref_number>
						<das:caption_id>3</das:caption_id>
						<das:caption_header>BI-Modul 1: Mobilität</das:caption_header>
						<das:guideline>
							<div>
								<p>Von einer erhöhten Sitzfläche, Bettkante, Stuhl, Sessel, Bank, Toilette etc. aufstehen und sich auf einen Rollstuhl, Toilettenstuhl, Sessel o.Ä. umsetzen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Selbständig ist jemand auch dann, wenn er keine Personenhilfe benötigt, aber ein Hilfsmittel oder einen anderen Gegenstand zum Festhalten oder Hochziehen (z.B. Griffstangen) benutzt oder sich auf Tisch, Armlehnen oder sonstigen Gegenständen abstützen muss, um aufzustehen. Als selbständig ist auch zu bewerten, wer zwar nicht stehen kann, aber sich mit Armkraft ohne personelle Hilfe umsetzen kann (z.B. Bett – Rollstuhl, Rollstuhl – Toilette).</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann aus eigener Kraft aufstehen oder sich umsetzen, wenn sie eine Hand oder einen Arm gereicht bekommt.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Pflegeperson muss beim Aufstehen, Umsetzen (erheblichen) Kraftaufwand aufbringen (hochziehen, halten, stützen, heben). Die beeinträchtigte Person hilft jedoch in geringem Maße mit, kann z.B. kurzzeitig stehen.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person muss gehoben oder getragen werden, Mithilfe ist nicht möglich.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="MOBILFORTBEWEGUNG">
				<xs:annotation>
					<xs:documentation>Fortbewegen innerhalb des Wohnbereichs</xs:documentation>
					<xs:appinfo>
						<das:ref_number>24</das:ref_number>
						<das:caption_id>3</das:caption_id>
						<das:caption_header>BI-Modul 1: Mobilität</das:caption_header>
						<das:guideline>
							<div>
								<p>Sich innerhalb einer Wohnung oder im Wohnbereich einer Einrichtung zwischen den Zimmern sicher bewegen. Als Anhaltsgröße für übliche Gehstrecken innerhalb einer Wohnung werden mindestens acht Meter festgelegt. Die Fähigkeiten zur räumlichen Orientierung und zum Treppensteigen sind unter Punkt 32 bzw. Punkt 30 zu berücksichtigen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann sich ohne Hilfe durch andere Personen fortbewegen. Dies kann ggf. unter Nutzung von Hilfsmitteln, z.B. Rollator, Rollstuhl oder sonstigen Gegenständen, z.B. Stock oder Möbelstück, geschehen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann die Aktivität überwiegend selbständig durchführen. Personelle Hilfe ist beispielsweise erforderlich im Sinne von Bereitstellen von Hilfsmitteln (z.B. Rollator oder Gehstock), Beobachtung aus Sicherheitsgründen oder gelegentlichem Stützen, Unterhaken.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann nur wenige Schritte gehen oder sich mit dem Rollstuhl nur wenige Meter fortbewegen oder kann nur mit Stützung oder Festhalten einer Pflegeperson gehen. Auch wenn sich die Person darüber hinaus aus eigenem Willen in ihrer Wohnung krabbelnd oder robbend fortbewegen kann, ändert dies nichts an der Bewertung als "überwiegend unselbständig".</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person muss getragen oder vollständig im Rollstuhl geschoben werden.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="MOBILTREPPENSTEIGEN">
				<xs:annotation>
					<xs:documentation>Treppensteigen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>25</das:ref_number>
						<das:caption_id>3</das:caption_id>
						<das:caption_header>BI-Modul 1: Mobilität</das:caption_header>
						<das:guideline>
							<div>
								<p>Überwinden von Treppen zwischen zwei Etagen. Treppensteigen ist unabhängig von der individuellen Wohnsituation zu bewerten.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann ohne Hilfe durch andere Personen in aufrechter Position eine Treppe steigen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann eine Treppe alleine steigen, benötigt aber Begleitung wegen eines Sturzrisikos.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Treppensteigen ist nur mit Stützen oder Festhalten der Person möglich.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Person muss getragen oder mit Hilfsmitteln transportiert werden, keine Eigenbeteiligung.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFERKENNEN">
				<xs:annotation>
					<xs:documentation>Erkennen von Personen aus dem näheren Umfeld</xs:documentation>
					<xs:appinfo>
						<das:ref_number>26</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, Personen aus dem näheren Umfeld wiederzuerkennen, d.h. Menschen, zu denen im Alltag regelmäßig ein direkter Kontakt besteht. Dazu gehören z.B. Familienmitglieder, Nachbarinnen und Nachbarn, aber auch Pflegekräfte eines ambulanten Dienstes oder einer stationären Pflegeeinrichtung.</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Die Person erkennt andere Personen aus ihrem näheren Umfeld unmittelbar.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Die Person erkennt bekannte Personen beispielsweise erst nach einer längeren Zeit des Kontaktes in einem Gespräch oder sie hat Schwierigkeiten, wenn auch nicht täglich, aber doch in regelmäßigen Abständen, vertraute Personen zu erkennen.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Die aus dem näheren Umfeld stammenden Personen werden nur selten erkannt oder die Fähigkeit hängt ggf. von der Tagesform ab, d.h. die Fähigkeit unterliegt im Zeitverlauf erheblichen Schwankungen.</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Auch Familienmitglieder werden nicht oder nur ausnahmsweise erkannt.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFORIENTOERTLICH">
				<xs:annotation>
					<xs:documentation>Örtliche Orientierung</xs:documentation>
					<xs:appinfo>
						<das:ref_number>27</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, sich in der räumlichen Umgebung zurechtzufinden, andere Orte gezielt anzusteuern und zu wissen, wo man sich befindet.</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Die Person weiß, in welcher Stadt, auf welchem Stockwerk und ggf. in welcher Einrichtung sie sich befindet. Sie kennt sich in den regelmäßig genutzten Räumlichkeiten aus. Ein Verirren in den Räumlichkeiten der eigenen Wohnung oder unmittelbar im Wohnbereich einer Einrichtung kommt nicht vor und die Person findet sich auch in der näheren außerhäuslichen Umgebung zurecht. Sie weiß beispielsweise, wie sie zu benachbarten Geschäften, zu einer Bushaltestelle oder zu einer anderen nahe gelegenen Örtlichkeit gelangt.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Es bestehen Schwierigkeiten, sich in der außerhäuslichen Umgebung zu orientieren, beispielsweise nach Verlassen des Hauses wieder den Weg zurückzufinden. In den eigenen Wohnräumen existieren solche Schwierigkeiten hingegen nicht.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Die Person hat auch in einer gewohnten Wohnumgebung Schwierigkeiten, sich zurechtzufinden. Regelmäßig genutzte Räumlichkeiten und Wege in der Wohnumgebung werden nicht immer erkannt.</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Selbst in der eigenen Wohnumgebung ist die Person regelmäßig auf Unterstützung angewiesen, um sich zurechtzufinden.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFORIENTZEITLICH">
				<xs:annotation>
					<xs:documentation>Zeitliche Orientierung</xs:documentation>
					<xs:appinfo>
						<das:ref_number>28</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, zeitliche Strukturen zu erkennen. Dazu gehören Uhrzeit, Tagesabschnitte (Vormittag, Nachmittag, Abend etc.), Jahreszeiten und die zeitliche Abfolge des eigenen Lebens. Aufschluss über die Fähigkeit zur zeitlichen Orientierung geben Antworten auf die Frage nach der Jahreszeit, dem Jahr, dem Wochentag, dem Monat oder der Tageszeit.</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Die zeitliche Orientierung ist ohne nennenswerte Beeinträchtigungen vorhanden.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Die Person ist die meiste Zeit über zeitlich orientiert, aber nicht durchgängig. Sie hat z.B. Schwierigkeiten, ohne äußere Orientierungshilfen (Uhr, Dunkelheit etc.) den Tagesabschnitt zu bestimmen.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Die zeitliche Orientierung ist die meiste Zeit nur in Ansätzen vorhanden. Die Person ist auch unter Nutzung äußerer Orientierungshilfen zumeist nicht in der Lage, Tageszeiten zu erkennen, zu denen regelmäßig bestimmte Ereignisse stattfinden (z.B. Mittagessen).</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Das Verständnis für zeitliche Strukturen und Abläufe ist kaum oder nicht vorhanden.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFERINNERN">
				<xs:annotation>
					<xs:documentation>Sich Erinnern</xs:documentation>
					<xs:appinfo>
						<das:ref_number>29</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, sich an kurz und auch länger zurückliegende Ereignisse oder Beobachtungen zu erinnern. Dazu gehört, dass die Person z.B. weiß, was sie zum Frühstück gegessen hat oder mit welchen Tätigkeiten sie den Vormittag verbracht hat. Im Hinblick auf das Langzeitgedächtnis geht es bei Erwachsenen z.B. um die Kenntnis des Geburtsjahres, des Geburtsorts oder wichtiger Bestandteile des Lebensverlaufs wie Eheschließung und Berufstätigkeit.</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Die Person kann über kurz zurückliegende Ereignisse Auskunft geben oder durch Handlungen und Gesten signalisieren, dass sie sich erinnert.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Die Person hat Schwierigkeiten, sich an manche kurz zurückliegende Ereignisse zu erinnern, oder muss hierzu länger nachdenken, sie hat aber keine nennenswerten Probleme, sich an Ereignisse aus der eigenen Lebensgeschichte zu erinnern.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Die Person vergisst kurz zurückliegende Ereignisse häufig. Nicht alle, aber wichtige Ereignisse aus der eigenen Lebensgeschichte sind (noch) präsent.</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Die Person ist nicht (oder nur selten) in der Lage, sich an Ereignisse, Dinge oder Personen aus der eigenen Lebensgeschichte zu erinnern.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFHANDLUNGEN">
				<xs:annotation>
					<xs:documentation>Steuern von mehrschrittigen Alltagshandlungen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>30</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, zielgerichtete Handlungen des Lebensalltags, die eine Abfolge von Teilschritten umfassen, zu steuern. Die Betonung liegt in diesem Fall auf dem Begriff Alltagshandlungen. Gemeint sind zielgerichtete Handlungen, die diese Person täglich oder nahezu täglich im Lebensalltag durchführt oder durchgeführt hat, wie z.B. das komplette Ankleiden, Kaffeekochen oder Tischdecken.</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Die Person ist in der Lage, die erforderlichen Handlungsschritte selbständig in der richtigen Reihenfolge auszuführen oder zu steuern, so dass das angestrebte Ergebnis der Handlung erreicht wird.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Die Person verliert manchmal den Faden und vergisst, welcher Handlungsschritt der nächste ist. Erhält sie dabei eine Erinnerungshilfe, kann sie die Handlung aber selbständig fortsetzen.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Die Person hat erhebliche Schwierigkeiten. Sie verwechselt regelmäßig die Reihenfolge der einzelnen Handlungsschritte oder vergisst einzelne, notwendige Handlungsschritte.</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Mehrschrittige Alltagshandlungen werden erst gar nicht begonnen oder nach den ersten Versuchen aufgegeben.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFENTSCHEIDUNGEN">
				<xs:annotation>
					<xs:documentation>Treffen von Entscheidungen im Alltagsleben</xs:documentation>
					<xs:appinfo>
						<das:ref_number>31</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, folgerichtige und geeignete Entscheidungen im Alltag zu treffen. Dazu gehört z.B. die dem Wetter angepasste Auswahl von Kleidung, die Entscheidung über die Durchführung von Aktivitäten wie Einkaufen, Familienangehörige oder Freundinnen und Freunde anrufen, einer Freizeitbeschäftigung nachgehen. Zu klären ist hier die Frage, ob die Entscheidungen folgerichtig sind, d.h. geeignet sind, das angestrebte Ziel zu erreichen oder ein gewisses Maß an Sicherheit und Wohlbefinden oder Bedürfnisbefriedigung zu gewährleisten, z.B. warme Kleidung.</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Die Person kann auch in unbekannten Situationen folgerichtige Entscheidungen treffen, beispielsweise beim Umgang mit unbekannten Personen, die an der Haustür klingeln.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Im Rahmen der Alltagsroutinen oder in zuvor besprochenen Situationen können Entscheidungen getroffen werden, die Person hat aber Schwierigkeiten in unbekannten Situationen.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Die Person trifft zwar Entscheidungen, diese Entscheidungen sind jedoch in der Regel nicht geeignet, ein bestimmtes Ziel zu erreichen. Dies ist beispielsweise der Fall, wenn die Person mit nur leichter Bekleidung bei winterlichen Temperaturen im Freien spazieren gehen will. Weiterhin liegt eine schwere Beeinträchtigung vor, wenn die Person nur mit Unterstützung in Form von Anleitung, Aufforderung, Aufzeigen von Handlungsalternativen in der Lage ist, Entscheidungen zu treffen.</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Die Person kann Entscheidungen auch mit Unterstützung nicht mehr oder nur selten treffen. Sie zeigt keine deutbare Reaktion auf das Angebot mehrerer Entscheidungsalternativen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFVERSTEHENINFO">
				<xs:annotation>
					<xs:documentation>Verstehen von Sachverhalten und Informationen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>32</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, Sachverhalte zu verstehen und Informationen inhaltlich einordnen zu können. Hier geht es um Ereignisse und Inhalte, die Bestandteil des Alltagslebens der meisten Menschen sind. Gemeint ist etwa die Fähigkeit, zu erkennen, dass man sich in einer bestimmten Situation befindet, z.B. gemeinschaftliche Aktivitäten mit anderen Menschen, Versorgung durch eine Pflegekraft, MDK-Begutachtung sowie die Fähigkeit, Informationen zum Tagesgeschehen aus den Medien, z.B. Fernsehgerät, Tageszeitung, aufzunehmen und inhaltlich zu verstehen. Gleiches gilt für mündlich von anderen Personen übermittelte Informationen.</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Die Person kann Sachverhalte und Informationen aus dem Alltagsleben ohne nennenswerte Probleme verstehen.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Die Person kann einfache Sachverhalte und Informationen nachvollziehen, hat bei komplizierteren jedoch Schwierigkeiten.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Die Person kann auch einfache Informationen häufig nur nachvollziehen, wenn sie wiederholt erklärt werden. Eine schwere Beeinträchtigung liegt auch dann vor, wenn das Verständnis sehr stark von der Tagesform abhängt.</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Die Person gibt weder verbal noch nonverbal zu erkennen, dass sie Situationen und übermittelte Informationen verstehen kann.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFGEFAHRERKENNEN">
				<xs:annotation>
					<xs:documentation>Erkennen von Risiken und Gefahren</xs:documentation>
					<xs:appinfo>
						<das:ref_number>33</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, Risiken und Gefahren zu erkennen. Dazu gehören Gefahren wie Strom- und Feuerquellen, Barrieren und Hindernisse auf dem Fußboden bzw. auf Fußwegen, eine problematische Beschaffenheit des Bodens (z.B. Glätte) oder Gefahrenzonen in der außerhäuslichen Umgebung (z.B. verkehrsreiche Straßen, Baustellen).</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Die Person kann solche Risiken und Gefahrenquellen im Alltagsleben ohne weiteres erkennen, auch wenn sie ihnen aus anderen Gründen (z.B. aufgrund von somatischen Beeinträchtigungen) nicht aus dem Weg gehen kann.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Die Person erkennt meist nur solche Risiken und Gefahren, die sich in der vertrauten innerhäuslichen Wohnumgebung wiederfinden. Es bestehen aber beispielsweise Schwierigkeiten, Risiken im Straßenverkehr angemessen einzuschätzen oder Gefährdungen in ungewohnter Umgebung zu erkennen.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Die Person kann auch Risiken und Gefahren, denen sie häufig auch in der Wohnumgebung begegnet, oft nicht als solche erkennen.</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Die Person kann Risiken und Gefahren so gut wie gar nicht erkennen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFMITTEILEN">
				<xs:annotation>
					<xs:documentation>Mitteilen von elementaren Bedürfnissen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>34</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, elementare Bedürfnisse verbal oder nonverbal mitzuteilen. Das beinhaltet, sich bei Hunger oder Durst, Schmerzen oder Frieren bemerkbar zu machen. Bei Sprachstörungen kann dies ggf. durch Laute, Mimik oder Gestik bzw. unter Nutzung von Hilfsmitteln erfolgen.</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Die Person kann Bedürfnisse äußern.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Die Person kann auf Nachfrage elementare Bedürfnisse äußern. Die Person äußert Bedürfnisse aber nicht immer von sich aus.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Elementare Bedürfnisse sind nur aus nonverbalen Reaktionen (Mimik, Gestik, Lautäußerungen) ableitbar, ggf. nach oder durch entsprechende(r) Stimulation; oder die Person äußert von sich aus keine elementaren Bedürfnisse, muss dazu ständig angeleitet werden, kann aber Zustimmung oder Ablehnung deutlich machen.</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Die Person äußert nicht oder nur sehr selten Bedürfnisse, auch nicht in nonverbaler Form. Sie kann weder Zustimmung noch Ablehnung deutlich machen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFVERSTEHENAUF">
				<xs:annotation>
					<xs:documentation>Verstehen von Aufforderungen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>35</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, Aufforderungen in Hinblick auf alltägliche Grundbedürfnisse zu verstehen. Zu den alltäglichen Grundbedürfnissen gehören z.B. Essen, Trinken, sich kleiden, sich beschäftigen.</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Aufforderungen und Bitten zu alltäglichen Grundbedürfnissen werden ohne weiteres verstanden.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Einfache Bitten und Aufforderungen, wie z.B. „Setz dich bitte an den Tisch!“, „Zieh dir die Jacke über!“, „Komm zum Essen!“, „Prosit!“ werden verstanden, Aufforderungen in nicht alltäglichen Situationen müssen erklärt werden. Ggf. sind besonders deutliche Ansprache, Wiederholungen, Zeichensprache, Gebärdensprache oder Schrift erforderlich, um Aufforderungen verständlich zu machen.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Die Person kann Aufforderungen und Bitten meist nicht verstehen, wenn diese nicht wiederholt geäußert und erläutert werden. Das Verständnis ist sehr von der Tagesform abhängig. Sie zeigt aber Zustimmung oder Ablehnung gegenüber nonverbalen Aufforderungen, z.B. Berührungen oder Geleiten an den Esstisch.</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Die Person kann Anleitungen und Aufforderungen kaum oder nicht verstehen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KKFBETEILIGUNG">
				<xs:annotation>
					<xs:documentation>Beteiligung an einem Gespräch</xs:documentation>
					<xs:appinfo>
						<das:ref_number>36</das:ref_number>
						<das:caption_id>4</das:caption_id>
						<das:caption_header>BI-Modul 2: Kognitive und kommunikative Fähigkeiten</das:caption_header>
						<das:guideline>
							<div>
								<p>Fähigkeit, in einem Gespräch Gesprächsinhalte aufzunehmen, sinngerecht zu antworten und zur Weiterführung des Gesprächs Inhalte einzubringen.</p>
								<p>
									<b>Fähigkeit vorhanden</b>
								</p>
								<p>Die Person kommt sowohl in Einzel- als auch in Gesprächen kleiner Gruppen gut zurecht. Sie zeigt im Gespräch Eigeninitiative, Interesse und beteiligt sich, wenn viel- leicht auch nur auf direkte Ansprache hin. Ihre Äußerungen passen zu den Inhalten des Gesprächs.</p>
								<p>
									<b>Fähigkeit größtenteils vorhanden</b>
								</p>
								<p>Die Person kommt in Gesprächen mit einer Person gut zurecht, in Gruppen ist sie jedoch meist überfordert und verliert den Faden. Wortfindungsstörungen treten ggf. regelmäßig auf. Die Person ist häufig auf besonders deutliche Ansprache oder Wiederholung von Worten, Sätzen angewiesen.</p>
								<p>
									<b>Fähigkeit in geringem Maße vorhanden</b>
								</p>
								<p>Die Person kann auch einem Gespräch nur mit einer Person kaum folgen oder sie kann sich nur wenig oder mit einzelnen Worten beteiligen. Die Person zeigt nur wenig Eigeninitiative, reagiert aber auf Ansprache oder Fragen mit wenigen Worten, z.B. mit ja oder nein; die Person beteiligt sich am Gespräch, weicht aber in aller Regel vom Gesprächsinhalt ab (führt mehr ein Selbstgespräch) oder es besteht leichte Ablenkbarkeit durch Umgebungseinflüsse.</p>
								<p>
									<b>Fähigkeit nicht vorhanden</b>
								</p>
								<p>Ein Gespräch mit der Person, das über einfache Mitteilungen hinausgeht, ist auch unter Einsatz nonverbaler Kommunikation kaum oder nicht möglich.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_vorhandenseinStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVERNAEHRUNG">
				<xs:annotation>
					<xs:documentation>Erfolgt die Ernährung des Bewohners bzw. der Bewohnerin parenteral oder über eine Sonde?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>37</das:ref_number>
						<das:caption_id>5</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Angaben zur Versorgung</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVFREMDHILFE">
				<xs:annotation>
					<xs:documentation>Erfolgt die Bedienung selbständig oder mit Fremdhilfe?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>38</das:ref_number>
						<das:caption_id>5</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Angaben zur Versorgung</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_fremdhilfe_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVERNAEHRUNGUMFANG">
				<xs:annotation>
					<xs:documentation>In welchem Umfang erfolgt eine künstliche Ernährung?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>39</das:ref_number>
						<das:caption_id>5</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Angaben zur Versorgung</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_kuenstlicheErnaehrung_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVHARNKONTINENZ">
				<xs:annotation>
					<xs:documentation>Blasenkontrolle/Harnkontinenz</xs:documentation>
					<xs:appinfo>
						<das:ref_number>40</das:ref_number>
						<das:caption_id>5</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Angaben zur Versorgung</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_harnkontinenz_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVSTUHLKONTINENZ">
				<xs:annotation>
					<xs:documentation>Darmkontrolle/Stuhlkontinenz</xs:documentation>
					<xs:appinfo>
						<das:ref_number>41</das:ref_number>
						<das:caption_id>5</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Angaben zur Versorgung</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_stuhlkontinenz_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVOBERKOERPER">
				<xs:annotation>
					<xs:documentation>Waschen des vorderen Oberkörpers</xs:documentation>
					<xs:appinfo>
						<das:ref_number>42</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Sich die Hände, das Gesicht, den Hals, die Arme, die Achselhöhlen und den vorderen Brustbereich waschen und abtrocknen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann die Aktivität selbständig durchführen, wenn benötigte Gegenstände, z.B. Seife, Waschlappen, bereitgelegt werden oder sie Aufforderung bzw. punktuelle Teilhilfen, z.B. Waschen unter den Achseln oder der Brust, erhält.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann nur geringe Anteile der Aktivität selbständig durchführen, sich z.B. nur Hände oder Gesicht waschen, oder benötigt umfassende Anleitung.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann sich an der Aktivität nicht oder nur minimal beteiligen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVKOPF">
				<xs:annotation>
					<xs:documentation>Körperpflege im Bereich des Kopfes</xs:documentation>
					<xs:appinfo>
						<das:ref_number>43</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Kämmen, Zahnpflege, Prothesenreinigung, Rasieren.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebenen Aktivitäten ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann die Aktivitäten selbständig durchführen, wenn benötigte Gegenstände bereitgelegt oder gerichtet werden, z.B. Aufdrehen der Zahnpastatube, Auftragen der Zahnpasta auf die Bürste, Aufbringen von Haftcreme auf die Prothese, Anreichen oder Säubern des Rasierapparates. Alternativ sind Aufforderungen oder punktuelle Teilhilfen erforderlich wie Korrekturen nach dem Kämmen oder nur das Kämmen des Hinterkopfes, das Reinigen der hinteren Backenzähne bei der Zahn-, Mundpflege bzw. die Nachrasur bei sonst selbständigem Rasieren.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann nur geringe Anteile der Aktivität selbständig leisten, so beginnt sie z.B. mit dem Zähneputzen oder der Rasur, ohne die Aktivität zu Ende zu führen.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann sich an den Aktivitäten nicht oder nur minimal beteiligen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVINTIMBEREICH">
				<xs:annotation>
					<xs:documentation>Waschen des Intimbereichs</xs:documentation>
					<xs:appinfo>
						<das:ref_number>44</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Den Intimbereich waschen und abtrocknen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann die Aktivität selbständig durchführen, wenn benötigte Utensilien, z.B. Seife, Waschlappen bereitgelegt werden oder sie Aufforderung bzw. punktuelle Teilhilfen erhält.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann nur geringe Anteile der Aktivität selbständig durchführen, sich z.B. nur den vorderen Intimbereich waschen.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann sich an der Aktivität nicht oder nur minimal beteiligen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVDUSCHENBADEN">
				<xs:annotation>
					<xs:documentation>Duschen oder Baden einschließlich Waschen der Haare</xs:documentation>
					<xs:appinfo>
						<das:ref_number>45</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Durchführung des Dusch- oder Wannenbades einschließlich des Waschens der Haare. Dabei sind neben der Fähigkeit, den Körper waschen zu können, auch Sicherheitsaspekte zu berücksichtigen. (Teil-)Hilfen beim Waschen in der Wanne, bzw. Dusche sind hier ebenso zu berücksichtigen wie die Hilfe beim Ein- und Aussteigen oder eine notwendige Überwachung während des Bades. Dazu gehört auch das Abtrocknen, Haarewaschen und Föhnen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann die Aktivität selbständig durchführen, wenn Utensilien vorbereitet bzw. bereitgestellt werden, einzelne Handreichungen geleistet werden, z.B. Stützen beim Ein-, Aussteigen, Bedienung eines Badewannenlifters, Hilfe beim Haarewaschen oder Föhnen, beim Abtrocknen, oder wenn während des (Dusch-)Bades aus nach- vollziehbaren Sicherheitsgründen Anwesenheit erforderlich ist.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann nur einen begrenzten Teil der Aktivität selbständig durchführen, z.B. das Waschen des vorderen Oberkörpers.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann sich an der Aktivität nicht oder nur minimal beteiligen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVANAUSOBERKOERPER">
				<xs:annotation>
					<xs:documentation>An- und Auskleiden des Oberkörpers</xs:documentation>
					<xs:appinfo>
						<das:ref_number>46</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Bereitliegende Kleidungsstücke, z.B. Unterhemd, T-Shirt, Hemd, Bluse, Pullover, Jacke, BH, Schlafanzugoberteil oder Nachthemd, an- und ausziehen. Die Beurteilung ist unabhängig davon vorzunehmen, ob solche Kleidungsstücke derzeit getragen werden. Das An- und Ablegen von körpernahen Hilfsmitteln ist hier nicht zu berücksichtigen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann die Aktivität beispielsweise selbständig durchführen, wenn Kleidungsstücke passend angereicht oder gehalten werden beim Anziehen eines Hemdes etc. Auch wenn Hilfe nur bei Verschlüssen erforderlich ist, trifft die Bewertung „überwiegend selbständig“ zu, ebenso wenn nur Kontrolle des Sitzes der Kleidung und Aufforderungen zur Vervollständigung der Handlung erforderlich sind.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann nur bei einem begrenzten Teil der Aktivität mithelfen, beispielsweise die Hände in die Ärmel eines bereitgehaltenen T-Shirts schieben.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann sich an der Aktivität nicht oder nur minimal beteiligen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVANAUSUNTERKOERPER">
				<xs:annotation>
					<xs:documentation>An- und Auskleiden des Unterkörpers</xs:documentation>
					<xs:appinfo>
						<das:ref_number>47</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Bereitliegende Kleidungsstücke, z.B. Unterwäsche, Hose, Rock, Strümpfe und Schuhe, an- und ausziehen. Die Beurteilung ist unabhängig davon vorzunehmen, ob solche Kleidungsstücke derzeit getragen werden. Das An- und Ablegen von körpernahen Hilfsmitteln ist hier nicht zu berücksichtigen, z.B. Kompressionsstrümpfe.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann die Aktivität beispielsweise selbständig durchführen, wenn Kleidungsstücke angereicht oder gehalten werden (Einstiegshilfe). Auch wenn Hilfe nur bei Verschlüssen, z.B. Schnürsenkel binden, Knöpfe schließen oder Kontrolle des Sitzes der Kleidung, und Aufforderungen zur Vervollständigung der Handlung erforderlich sind, trifft die Bewertung „überwiegend selbständig“ zu.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann die Aktivität zu einem geringen Teil selbständig durchführen. Beispielsweise gelingt das Hochziehen von Hose oder Rock zur Taille selbständig, zuvor muss das Kleidungsstück jedoch von der Pflegeperson über die Füße gezogen werden.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann sich an der Aktivität nicht oder nur minimal beteiligen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVNAHRUNGZUBEREITEN">
				<xs:annotation>
					<xs:documentation>Mundgerechtes Zubereiten der Nahrung, Eingießen von Getränken</xs:documentation>
					<xs:appinfo>
						<das:ref_number>48</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Zerteilen von Nahrung in mundgerechte Stücke und Eingießen von Getränken. Dazu gehört das Zerteilen von belegten Brotscheiben, Obst oder anderen Speisen in mundgerechte Stücke, z.B. das Kleinschneiden von Fleisch, das Zerdrücken von Kartoffeln, Pürieren der Nahrung, Verschlüsse von Getränkeflaschen öffnen, Getränke aus einer Flasche oder Kanne in ein Glas bzw. eine Tasse eingießen, ggf. unter Nutzung von Hilfsmitteln wie Antirutschbrett oder sonstigen Gegenständen wie Spezialbesteck.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Es ist punktuelle Hilfe erforderlich, z.B. beim Öffnen einer Flasche oder beim Schneiden von harten Nahrungsmitteln.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann die Aktivität zu einem geringen Teil selbständig durchführen, beispielsweise schneidet sie zwar belegte Brotscheiben, schafft es aber nicht, mundgerechte Stücke herzustellen. Oder sie gießt aus einer Flasche Wasser ins Glas, verschüttet das Wasser dabei jedoch regelmäßig.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann sich an der Aktivität nicht oder nur minimal beteiligen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVESSEN">
				<xs:annotation>
					<xs:documentation>Essen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>49</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Bereitgestellte, mundgerecht zubereitete Speisen essen. Dies beinhaltet das Aufnehmen, Zum-Mund-Führen, ggf. Abbeißen, Kauen und Schlucken von mundgerecht zubereiteten Speisen, die üblicherweise mit den Fingern gegessen werden, z.B. Brot, Kekse, Obst oder das Essen mit Gabel oder Löffel, ggf. mit speziellen Hilfsmitteln wie adaptiertem Besteck. Zu berücksichtigen ist auch, inwieweit die Notwendigkeit der ausreichenden Nahrungsaufnahme (auch ohne Hungergefühl oder Appetit) erkannt und die empfohlene, gewohnte Menge tatsächlich gegessen wird. Das Einhalten von Diäten ist hier nicht zu bewerten. Die Beurteilung ist auch dann vorzunehmen, wenn die Nahrungsaufnahme über eine Sonde bzw. parenteral erfolgt.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann überwiegend selbständig essen, benötigt aber punktuelle Anleitung, muss beispielsweise aufgefordert werden, mit dem Essen zu beginnen oder weiterzuessen. Es sind punktuelle Hilfen erforderlich, z.B. Zurücklegen aus der Hand gerutschter Speisen oder Besteck in die Hand geben.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Es muss ständig zur Nahrungsaufnahme motiviert werden oder die Nahrung muss größtenteils gereicht werden oder es ist ständige und unmittelbare Eingreifbereitschaft der Pflegeperson erforderlich, aufgrund von Aspirationsgefahr.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Nahrung muss (nahezu) komplett gereicht werden.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitTyp2_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVTRINKEN">
				<xs:annotation>
					<xs:documentation>Trinken</xs:documentation>
					<xs:appinfo>
						<das:ref_number>50</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Bereitstehende Getränke aufnehmen, ggf. mit Gegenständen wie Strohhalm oder Spezialbecher mit Trinkaufsatz. Zu berücksichtigen ist auch, inwieweit die Notwendigkeit der Flüssigkeitsaufnahme (auch ohne ausreichendes Durstgefühl) erkannt und die empfohlene oder gewohnte Menge tatsächlich getrunken wird. Die Beurteilung der Selbständigkeit ist auch dann vorzunehmen, wenn die Flüssigkeitsaufnahme über eine Sonde bzw. parenteral erfolgt.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann selbständig trinken, wenn ein Glas oder eine Tasse unmittelbar in den Aktionsradius der Person positioniert oder sie ans Trinken erinnert wird.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Das Trinkgefäß muss beispielsweise in die Hand gegeben werden, das Trinken erfolgt jedoch selbständig, oder die Person muss zu fast jedem Schluck motiviert werden oder es ist ständige und unmittelbare Eingreifbereitschaft der Pflegeperson erforderlich, aufgrund von Aspirationsgefahr.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Getränke müssen (nahezu) komplett gereicht werden.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitTyp1_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVTOILETTE">
				<xs:annotation>
					<xs:documentation>Benutzen einer Toilette oder eines Toilettenstuhls</xs:documentation>
					<xs:appinfo>
						<das:ref_number>51</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Gehen zur Toilette, Hinsetzen und Aufstehen, Sitzen während der Blasen- oder Darmentleerung, Intimhygiene und Richten der Kleidung. Die Beurteilung ist auch dann vorzunehmen, wenn anstelle der Toilettenbenutzung eine Versorgung mit Hilfsmitteln erfolgt, z.B. Inkontinenzmaterial, Katheter, Urostoma, Ileo- oder Colostoma.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann die Aktivität überwiegend selbständig durchführen. Personelle Hilfe kann sich beispielsweise beschränken auf einzelne Handlungsschritte wie:</p>
								<p>
									<ul>
										<li>nur Bereitstellen und Leeren des Toilettenstuhls (alternativ Urinflasche oder anderer Behälter),</li>
										<li>nur Aufforderung oder Orientierungshinweise zum Auffinden der Toilette oder Begleitung auf dem Weg zur Toilette,</li>
										<li>nur Anreichen von Toilettenpapier oder Waschlappen, Intimhygiene nur nach Stuhlgang,</li>
										<li>nur Unterstützung beim Hinsetzen, Aufstehen von der Toilette,</li>
										<li>nur punktuelle Hilfe beim Richten der Bekleidung.</li>
									</ul>
								</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann nur einzelne Handlungsschritte selbst ausführen, z.B. nur Richten der Bekleidung oder Intimhygiene nur nach Wasserlassen.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann sich nicht oder nur minimal an der Aktivität beteiligen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitTyp1_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVHARNKONTINENZBEW">
				<xs:annotation>
					<xs:documentation>Bewältigung der Folgen einer Harninkontinenz (auch Umgang mit Dauerkatheter/Urostoma)</xs:documentation>
					<xs:appinfo>
						<das:ref_number>52</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Inkontinenz- und Stomasysteme sachgerecht verwenden, nach Bedarf wechseln und entsorgen. Dazu gehört auch das Entleeren eines Urinbeutels bei Dauerkatheter, Urostoma oder die Anwendung eines Urinalkondoms. Die regelmäßige Einmalkatheterisierung ist hier nicht zu erfassen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann Hilfsmittel selbständig benutzen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann die Aktivität überwiegend selbständig durchführen, wenn Inkontinenzsysteme angereicht oder entsorgt werden oder die Person an den Wechsel erinnert wird.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann sich am Wechsel der Inkontinenzsysteme beteiligen, z.B. nur Vorlagen einlegen oder Inkontinenzhosen nur entfernen.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Beteiligung ist nicht oder nur minimal möglich.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SVSTUHLKONTINENZBEW">
				<xs:annotation>
					<xs:documentation>Bewältigung der Folgen einer Stuhlinkontinenz (auch Umgang mit Stoma)</xs:documentation>
					<xs:appinfo>
						<das:ref_number>53</das:ref_number>
						<das:caption_id>6</das:caption_id>
						<das:caption_header>BI-Modul 4: Selbstversorgung - Bewertung</das:caption_header>
						<das:guideline>
							<div>
								<p>Inkontinenz- und Stomasysteme sachgerecht verwenden, nach Bedarf wechseln und entsorgen. Dazu gehört, Inkontinenzsysteme, z.B. große Vorlagen mit Netzhose, Inkontinenzhose mit Klebestreifen oder Pants, sachgerecht verwenden, nach Bedarf wechseln und entsorgen. Dazu gehört auch die Anwendung eines Analtampons oder das Entleeren oder Wechseln eines Stomabeutels bei Enterostoma. Die Pflege des Stomas und der Wechsel einer Basisplatte sind hier nicht zu berücksichtigen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann Hilfsmittel selbständig benutzen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann die Aktivität überwiegend selbständig durchführen, wenn Inkontinenzsysteme bereitgelegt und entsorgt werden oder die Person an den Wechsel erinnert wird.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann sich am Wechsel der Inkontinenzsysteme beteiligen, z.B. Mithilfe beim Wechsel eines Stomabeutels. Bei Vorliegen einer Stuhlinkontinenz sind Ressourcen beim Wechsel des Inkontinenzmaterials eher selten.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Beteiligung ist nicht (oder nur minimal) möglich.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GATAGESABLAUF">
				<xs:annotation>
					<xs:documentation>Tagesablauf gestalten und an Veränderungen anpassen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>54</das:ref_number>
						<das:caption_id>7</das:caption_id>
						<das:caption_header>BI-Modul 6: Gestaltung des Alltagslebens und sozialer Kontakte</das:caption_header>
						<das:guideline>
							<div>
								<p>Den Tagesablauf nach individuellen Gewohnheiten und Vorlieben einteilen und bewusst gestalten und ggf. an äußere Veränderungen anpassen. Dies erfordert planerische Fähigkeiten zur Umsetzung von Alltagsroutinen. Zu beurteilen ist, ob die Person von sich aus festlegen kann, ob und welche Aktivitäten sie im Laufe des Tages durchführen möchte, z.B. wann sie baden, essen oder zu Bett gehen oder wann sie Fernsehen oder spazieren gehen möchte. Solche Festlegungen setzen voraus, dass die zeitliche Orientierung zumindest teilweise erhalten ist. Die Gutachterin bzw. der Gutachter kann dies prüfen, indem er bzw. sie sich z.B. den bisherigen oder künftigen Tagesablauf schildern lässt.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Routineabläufe können weitgehend selbständig gestaltet werden, bei ungewohnten Veränderungen ist Unterstützung notwendig. Es reichen z.B. Erinnerungshilfen an einzelne vereinbarte Termine. Überwiegend selbständig ist eine Person beispielsweise auch dann, wenn ihre Kommunikationsfähigkeit oder Sinneswahrnehmung stark beeinträchtigt ist und sie daher Hilfe benötigt, um den Tagesablauf mit anderen Menschen abzustimmen.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person benötigt Hilfe beim Planen des Routinetagesablaufs. Sie ist aber in der Lage, Zustimmung oder Ablehnung zu Strukturierungsangeboten zu signalisieren. Sie kann eigene Planungen häufig nicht einhalten, da diese wieder vergessen werden. Deshalb ist über den ganzen Tag hinweg eine Erinnerung bzw. Aufforderung erforderlich. Überwiegend unselbständig ist auch eine Person, die zwar selbst planen und entscheiden kann, aber für jegliche Umsetzung personelle Hilfe benötigt.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Mitwirkung an der Tagesstrukturierung oder Orientierung an vorgegebenen Strukturen ist nicht oder nur minimal möglich.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GARUHENSCHLAFEN">
				<xs:annotation>
					<xs:documentation>Ruhen und Schlafen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>55</das:ref_number>
						<das:caption_id>7</das:caption_id>
						<das:caption_header>BI-Modul 6: Gestaltung des Alltagslebens und sozialer Kontakte</das:caption_header>
						<das:guideline>
							<div>
								<p>Nach individuellen Gewohnheiten einen Tag-Nacht-Rhythmus einhalten und für ausreichende Ruhe- und Schlafphasen sorgen. Dazu gehören die Fähigkeit, die Notwendigkeit von Ruhephasen zu erkennen, sich auszuruhen und mit Phasen der Schlaflosigkeit umzugehen, aber auch somatische Funktionen, um ins Bett zu kommen und die Ruhephasen insbesondere nachts einhalten zu können.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person benötigt personelle Hilfe beim Aufstehen oder Zu-Bett-Gehen, z.B. Transferhilfen oder zeitliche Orientierungshilfen beim Wecken oder Aufforderung, schlafen zu gehen, oder einzelne Hilfen wie z.B. Abdunkeln des Schlafraumes. Die Nachtruhe ist meist ungestört, nur gelegentlich entsteht nachts ein Hilfebedarf.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Es treten regelmäßig Einschlafprobleme oder nächtliche Unruhe auf, die die Person größtenteils nicht allein bewältigen kann. Deshalb sind regelmäßige Einschlafrituale und beruhigende Ansprache in der Nacht erforderlich. Überwiegend unselbständig ist auch eine Person, die wegen hochgradiger motorischer Beeinträchtigung regelmäßig in der Nacht personeller Hilfe bedarf, um weiterschlafen zu können, z.B. bei Lagewechsel oder Toilettengängen in der Nacht.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person verfügt über keinen oder einen gestörten Schlaf-Wach-Rhythmus. Dies gilt u.a. für mobile gerontopsychiatrisch erkrankte Personen und auch für Menschen, die keinerlei Aktivitäten ausüben, z.B. im Wachkoma, oder Personen, die regelmäßig mindestens dreimal in der Nacht personelle Unterstützung benötigen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GABESCHAEFTIGEN">
				<xs:annotation>
					<xs:documentation>Sich beschäftigen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>56</das:ref_number>
						<das:caption_id>7</das:caption_id>
						<das:caption_header>BI-Modul 6: Gestaltung des Alltagslebens und sozialer Kontakte</das:caption_header>
						<das:guideline>
							<div>
								<p>Die verfügbare Zeit nutzen, um Aktivitäten durchzuführen, die den eigenen Vorlieben und Interessen entsprechen. „Verfügbare Zeit“ ist in diesem Zusammenhang definiert als Zeit, die nicht durch Notwendigkeiten wie Ruhen, Schlafen, Essen, Mahlzeitenzubereitung, Körperpflege, Arbeit etc. gebunden ist („freie“ Zeit). Bei der Beurteilung geht es vorrangig um die Fähigkeit, nach individuellen kognitiven, manuellen, visuellen oder auditiven Fähigkeiten und Bedürfnissen geeignete Aktivitäten der Freizeitbeschäftigung auszuwählen und auch praktisch durchzuführen, z.B. Handarbeiten, Basteln, Bücher oder Zeitschriften lesen, Sendungen im Radio oder Fernsehen verfolgen, Computer nutzen. Dies gilt auch für Personen, die Angebote auswählen und steuern können, aber aufgrund somatischer Einschränkungen für die praktische Durchführung personelle Unterstützung benötigen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Es ist nur in geringem Maße Hilfe erforderlich, z.B. Zurechtlegen und Richten von Gegenständen, z.B. Utensilien wie Bastelmaterial, Fernbedienung, Kopfhörer o.Ä. oder Erinnerung an gewohnte Aktivitäten, Motivation oder Unterstützung bei der Entscheidungsfindung (Vorschläge unterbreiten).</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person kann sich an Beschäftigungen beteiligen, aber nur mit (kontinuierlicher) Anleitung, Begleitung oder motorischer Unterstützung.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person kann an der Entscheidung oder Durchführung nicht nennenswert mitwirken. Sie zeigt keine Eigeninitiative, kann Anleitungen und Aufforderungen nicht kognitiv umsetzen, beteiligt sich nicht oder nur minimal an angebotenen Beschäftigungen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GAPLANUNGEN">
				<xs:annotation>
					<xs:documentation>In die Zukunft gerichtete Planungen vornehmen</xs:documentation>
					<xs:appinfo>
						<das:ref_number>57</das:ref_number>
						<das:caption_id>7</das:caption_id>
						<das:caption_header>BI-Modul 6: Gestaltung des Alltagslebens und sozialer Kontakte</das:caption_header>
						<das:guideline>
							<div>
								<p>Längere Zeitabschnitte überschauend über den Tag hinaus planen. Dies kann beispielsweise anhand der Frage beurteilt werden, ob Vorstellungen oder Wünsche zu anstehenden Festlichkeiten wie Geburtstag oder Jahresfeste bestehen, ob die Zeitabläufe eingeschätzt werden können, z.B. vorgegebene Strukturen wie regelmäßige Termine nachvollzogen werden können, oder ob die körperlichen Fähigkeiten vorhanden sind, um eigene Zukunftsplanungen mit anderen Menschen kommunizieren zu können. Es ist auch zu berücksichtigen, wenn stark ausgeprägte psychische Problemlagen (z.B. Ängste) es verhindern, sich mit Fragen des zukünftigen Handelns auseinanderzusetzen.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person nimmt sich etwas vor, muss aber erinnert werden, dies auch durchzuführen. Oder sie benötigt infolge körperlicher Beeinträchtigungen regelmäßig Hilfe im Bereich der Kommunikation, um sich mit anderen Menschen verabreden zu können.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person plant von sich aus nicht, entscheidet aber mit Unterstützung durch andere Personen. Sie muss an die Umsetzung der eigenen Entscheidungen erinnert werden oder benötigt bei der Umsetzung emotionale oder körperliche Unterstützung. Überwiegend unselbständig ist daher auch eine Person, die zwar kognitiv in der Lage ist, selbständig zu planen und zu entscheiden, die aber so stark somatisch beeinträchtigt ist, dass sie für alle Umsetzungsschritte personelle Hilfe benötigt.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person verfügt nicht über Zeitvorstellungen für Planungen über den Tag hinaus, auch bei Vorgabe von Auswahloptionen wird weder Zustimmung noch Ablehnung signalisiert.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GAINTERAKTION">
				<xs:annotation>
					<xs:documentation>Interaktion mit Personen im direkten Kontakt</xs:documentation>
					<xs:appinfo>
						<das:ref_number>58</das:ref_number>
						<das:caption_id>7</das:caption_id>
						<das:caption_header>BI-Modul 6: Gestaltung des Alltagslebens und sozialer Kontakte</das:caption_header>
						<das:guideline>
							<div>
								<p>Im direkten Kontakt mit Angehörigen, Pflegepersonen, Mitbewohnerinnen bzw. Mitbewohnern oder Besucherinnen bzw. Besuchern umgehen, Kontakt aufnehmen, Personen ansprechen, auf Ansprache reagieren.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Umgang mit bekannten Personen erfolgt selbständig, zur Kontaktaufnahme mit Fremden ist Unterstützung erforderlich, z.B. Anregung, zu einer neuen Mitbewohnerin oder einem neuen Mitbewohner Kontakt aufzunehmen oder punktuelle Unterstützung bei der Überwindung von Sprech-, Sprach- und Hörproblemen.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Person ergreift von sich aus kaum Initiative. Sie muss angesprochen oder motiviert werden, reagiert aber verbal oder deutlich erkennbar durch andere Formen der Kommunikation (Blickkontakt, Mimik, Gestik). Überwiegend unselbständig ist auch eine Person, die auf weitgehende Unterstützung bei der Überwindung von Sprech-, Sprach- oder Hörproblemen angewiesen ist.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person reagiert nicht auf Ansprache. Auch nonverbale Kontaktversuche, z.B. Berührungen, führen zu keiner nennenswerten Reaktion.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GAKONTAKTPFLEGE">
				<xs:annotation>
					<xs:documentation>Kontaktpflege zu Personen außerhalb des direkten Umfeldes</xs:documentation>
					<xs:appinfo>
						<das:ref_number>59</das:ref_number>
						<das:caption_id>7</das:caption_id>
						<das:caption_header>BI-Modul 6: Gestaltung des Alltagslebens und sozialer Kontakte</das:caption_header>
						<das:guideline>
							<div>
								<p>Bestehende Kontakte zu Freundinnen bzw. Freunden, Bekannten, Nachbarinnen bzw. Nachbarn aufrechterhalten, beenden oder zeitweise ablehnen. Dazu gehört auch die Fähigkeit, mit technischen Kommunikationsmitteln wie Telefon umgehen zu können, z.B. Besuche verabreden oder Telefon-, Brief- oder Mail-Kontakte.</p>
								<p>
									<b>Selbständig</b>
								</p>
								<p>Die Person kann die beschriebene Aktivität ohne personelle Hilfe durchführen.</p>
								<p>
									<b>Überwiegend selbständig</b>
								</p>
								<p>Die Person kann planen, braucht aber Hilfe beim Umsetzen wie z.B. Erinnerungszettel bereitlegen oder Telefonnummern mit Namen oder mit Bild versehen, Erinnern und Nachfragen, ob Kontakt hergestellt wurde, oder Erinnern an Terminabsprachen. Pflegeperson wählt die Telefonnummer, die Person führt dann das Gespräch oder die Person beauftragt die Pflegeperson, ein Treffen mit Freundinnen bzw. Freunden, Bekannten zu verabreden.</p>
								<p>
									<b>Überwiegend unselbständig</b>
								</p>
								<p>Die Kontaktgestaltung der Person ist eher reaktiv. Sie sucht von sich aus kaum Kontakt, wirkt aber mit, wenn beispielsweise die Pflegeperson die Initiative ergreift. Überwiegend unselbständig ist auch, wer aufgrund von somatischen Beeinträchtigungen während der Kontaktaufnahme personelle Unterstützung durch die Bezugsperson, z.B. bei der Nutzung von Kommunikationshilfen (Telefon halten) oder bei der Überwindung von Sprech-, Sprach- oder Hörproblemen, benötigt.</p>
								<p>
									<b>Unselbständig</b>
								</p>
								<p>Die Person nimmt keinen Kontakt außerhalb des direkten Umfeldes auf und reagiert nicht auf Anregungen zur Kontaktaufnahme.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_selbststaendigkeitStandard_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DEKUBITUS">
				<xs:annotation>
					<xs:documentation>Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>60</das:ref_number>
						<das:caption_id>8</das:caption_id>
						<das:caption_header>Dekubitus</das:caption_header>
						<das:guideline>
							<div>
								<p>Gemeint sind alle Dekubitalulcera, die in den vergangenen 6 Monaten beim Bewohner bzw. bei der Bewohnerin bestanden oder bis heute bestehen. Auch wenn der Zeitpunkt der Entstehung länger als 6 Monate zurückliegt, der Dekubitus aber noch nicht abgeheilt war, ist die Frage mit „ja“ zu beantworten und das Entstehungsdatum anzugeben.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jnAnzahl_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DEKUBITUSSTADIUM">
				<xs:annotation>
					<xs:documentation>Maximales Dekubitusstadium im Erhebungszeitraum</xs:documentation>
					<xs:appinfo>
						<das:ref_number>61</das:ref_number>
						<das:caption_id>8</das:caption_id>
						<das:caption_header>Dekubitus</das:caption_header>
						<das:guideline>
							<div>
								<p>Orientieren Sie sich bei der Beurteilung bitte an folgender Einteilung:</p>
								<p>
									<b>Kategorie/Stadium 1</b>
								</p>
								<p>Reversible Hautrötungen, eventuell mit Ödembildung, Verhärtung oder Überwärmung.</p>
								<p>
									<b>Kategorie/Stadium 2</b>
								</p>
								<p>Teilverlust der Haut. Epidermis bis hin zu Anteilen der Dermis (Korium) ist geschädigt. Der Druckschaden ist oberflächlich und kann sich klinisch als Blase, Hautabschürfung oder flaches Geschwür darstellen.</p>
								<p>
									<b>Kategorie/Stadium 3</b>
								</p>
								<p>Verlust aller Hautschichten und Schädigung oder Nekrose des subkutanen Gewebes, die bis auf die darunterliegende Faszie reichen kann. Der Dekubitus zeigt sich klinisch als tiefes, offenes Geschwür.</p>
								<p>
									<b>Kategorie/Stadium 4</b>
								</p>
								<p>Verlust aller Hautschichten mit ausgedehnter Zerstörung, Gewebsnekrose oder Schädigung von Muskeln, Knochen oder unterstützenden Strukturen (z.B. Sehnen, Bändern oder Gelenkkapseln).</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_dekubitusStadium_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DEKUBITUS1BEGINNDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Beginn Dekubitus 1</xs:documentation>
					<xs:appinfo>
						<das:ref_number>62</das:ref_number>
						<das:caption_id>8</das:caption_id>
						<das:caption_header>Dekubitus</das:caption_header>
						<das:guideline>
							<div>
								<p>Zu Dekubitus in Kategorie/Stadium 1 sollen keine Datumsangaben gemacht werden. Gab es mehr als zwei Dekubitusepisoden in den letzten 6 Monaten, sind die beiden zeitlich letzten zu berücksichtigen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DEKUBITUS1ENDEDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Ende Dekubitus 1 (ggf. bis heute)</xs:documentation>
					<xs:appinfo>
						<das:ref_number>63</das:ref_number>
						<das:caption_id>8</das:caption_id>
						<das:caption_header>Dekubitus</das:caption_header>
						<das:guideline>
							<div>
								<p>Zu Dekubitus in Kategorie/Stadium 1 sollen keine Datumsangaben gemacht werden. Gab es mehr als zwei Dekubitusepisoden in den letzten 6 Monaten, sind die beiden zeitlich letzten zu berücksichtigen.</p>
								<p>Falls der Dekubitus zum Stichtag noch besteht, bitte den Stichtag angeben.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DEKUBITUS1LOK">
				<xs:annotation>
					<xs:documentation>Wo ist der Dekubitus 1 entstanden?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>64</das:ref_number>
						<das:caption_id>8</das:caption_id>
						<das:caption_header>Dekubitus</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_lokalisation_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DEKUBITUS2BEGINNDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Beginn Dekubitus 2</xs:documentation>
					<xs:appinfo>
						<das:ref_number>65</das:ref_number>
						<das:caption_id>8</das:caption_id>
						<das:caption_header>Dekubitus</das:caption_header>
						<das:guideline>
							<div>
								<p>Zu Dekubitus in Kategorie/Stadium 1 sollen keine Datumsangaben gemacht werden. Gab es mehr als zwei Dekubitusepisoden in den letzten 6 Monaten, sind die beiden zeitlich letzten zu berücksichtigen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DEKUBITUS2ENDEDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Ende Dekubitus 2 (ggf. bis heute)</xs:documentation>
					<xs:appinfo>
						<das:ref_number>66</das:ref_number>
						<das:caption_id>8</das:caption_id>
						<das:caption_header>Dekubitus</das:caption_header>
						<das:guideline>
							<div>
								<p>Zu Dekubitus in Kategorie/Stadium 1 sollen keine Datumsangaben gemacht werden. Gab es mehr als zwei Dekubitusepisoden in den letzten 6 Monaten, sind die beiden zeitlich letzten zu berücksichtigen.</p>
								<p>Falls der Dekubitus zum Stichtag noch besteht, bitte den Stichtag angeben.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DEKUBITUS2LOK">
				<xs:annotation>
					<xs:documentation>Wo ist der Dekubitus 2 entstanden?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>67</das:ref_number>
						<das:caption_id>8</das:caption_id>
						<das:caption_header>Dekubitus</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_lokalisation_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KOERPERGEWICHT">
				<xs:annotation>
					<xs:documentation>Aktuelles Körpergewicht in kg</xs:documentation>
					<xs:appinfo>
						<das:ref_number>68</das:ref_number>
						<das:unit>kg</das:unit>
						<das:caption_id>9</das:caption_id>
						<das:caption_header>Körpergewicht</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" use="optional">
						<xs:simpleType>
							<xs:restriction base="xs:decimal">
								<xs:totalDigits value="5"/>
								<xs:fractionDigits value="2"/>
								<xs:minInclusive value="0"/>
								<xs:maxInclusive value="500"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="KOERPERGEWICHTDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Dokumentation des Körpergewichts</xs:documentation>
					<xs:appinfo>
						<das:ref_number>69</das:ref_number>
						<das:caption_id>9</das:caption_id>
						<das:caption_header>Körpergewicht</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="KOERPERGEWICHTDOKU" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Welche der aufgeführten Punkte trafen laut Pflegedokumentation für den Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung zu?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>70</das:ref_number>
						<das:caption_id>9</das:caption_id>
						<das:caption_header>Körpergewicht</das:caption_header>
						<das:guideline>
							<div>
								<p>Hier werden Sie aufgefordert, verschiedene ergänzende Angaben zu machen bzw. aus der Pflegedokumentation zu übertragen. Wenn sich beispielsweise eine starke Gewichtsabnahme auf medizinische Gründe, z.B. eine ärztlich verordnete Diät oder eine medikamentöse Therapie zur gezielten Ausschwemmung (ärztlich verordnete Diurese) zurückführen lässt, ist das durch diese Angaben erkennbar.
Bitte achten Sie darauf, dass nur Angaben übernommen werden, die in den letzten 6 Monaten relevant waren. Das Feld <i>„Aktuelles Gewicht liegt nicht vor. Bewohner bzw. Bewohnerin möchte nicht gewogen werden“</i> soll nur angegeben werden, wenn dies tatsächlich so in der Pflegedokumentation eingetragen ist.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_gewichtsverlust_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="STURZ">
				<xs:annotation>
					<xs:documentation>Ist der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in der Einrichtung gestürzt?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>71</das:ref_number>
						<das:caption_id>10</das:caption_id>
						<das:caption_header>Sturzfolgen</das:caption_header>
						<das:guideline>
							<div>
								<p>Stürze und Sturzfolgen, die eingetreten sind, während sich der Bewohner bzw. die Bewohnerin im Verantwortungsbereich anderer Personen oder Einrichtungen befand, die ihn unterstützten, bleiben unberücksichtigt (z.B. Sturzverletzung während eines Krankenhausaufenthalts oder vor dem Einzug in der Privatwohnung oder während eines Urlaubs oder während eines Spaziergangs gemeinsam mit Angehörigen). Verletzungen bei einem Sturz während eines Spaziergangs, den der Bewohner bzw. die Bewohnerin allein unternimmt, sind hingegen aufzuführen. Orientieren Sie sich bei der Beantwortung dieser Frage an den in der Pflegedokumentation bzw. in den Sturzprotokollen festgehaltenen Sturzereignissen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jnAnzahl_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="STURZFOLGEN" maxOccurs="4">
				<xs:annotation>
					<xs:documentation>Welche Sturzfolgen sind aufgetreten?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>72</das:ref_number>
						<das:caption_id>10</das:caption_id>
						<das:caption_header>Sturzfolgen</das:caption_header>
						<das:guideline>
							<div>
								<p>Von einem erhöhten Unterstützungsbedarf bei Alltagsverrichtungen oder bei der Mobilität ist dann auszugehen, wenn der Bewohner bzw. die Bewohnerin mehr Unterstützung benötigt und eine entsprechende Anpassung der Maßnahmenplanung nötig wurde.</p>
								<p>Beispiele: Durch den Sturz ist die Motorik der oberen Gliedmaßen eingeschränkt, wodurch mehr Unterstützungsbedarf bei der Körperpflege entsteht.</p>
								<p>Oder: Durch den Sturz ist die Motorik der unteren Gliedmaße eingeschränkt, weshalb der Bewohner bzw. die Bewohnerin beim Gehen mehr Unterstützung benötigt und eine entsprechende Anpassung der Maßnahmenplanung erfolgen musste.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_sturzfolgen_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="GURT">
				<xs:annotation>
					<xs:documentation>Wurden bei dem Bewohner bzw. der Bewohnerin in den vergangenen 4 Wochen Gurte angewendet?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>73</das:ref_number>
						<das:caption_id>11</das:caption_id>
						<das:caption_header>Anwendung von Gurten</das:caption_header>
						<das:guideline>
							<div>
								<p>Bitte beachten Sie, dass alle Gurtanwendungen zu erfassen sind, gleichgültig, ob eine richterliche Genehmigung oder das Einverständnis des Bewohners bzw. der Bewohnerin vorliegt. Auch Gurte, die der Bewohner bzw. die Bewohnerin theoretisch selbst öffnen könnte, sind einzutragen. Auch wenn nur aufgrund der Befürchtung eines Sturzes fixiert wird, ist dies einzutragen. Sitzhosen in Rollstühlen und Gurte im Gehwagen gehören nicht zu den zu berücksichtigenden Gurten.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SEITENTEILE">
				<xs:annotation>
					<xs:documentation>Wurden bei dem Bewohner bzw. der Bewohnerin in den vergangenen 4 Wochen Bettseitenteile angewendet?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>74</das:ref_number>
						<das:caption_id>12</das:caption_id>
						<das:caption_header>Anwendung von Bettseitenteilen</das:caption_header>
						<das:guideline>
							<div>
								<p>Unabhängig von der rechtlichen Grundlage ist jedwede Anwendung von Bettseitenteilen anzugeben, wenn diese dazu geeignet ist, das Verlassen des Bettes zu verhindern. Außer Betracht bleiben unterbrochene Bettseitenteile, die das Verlassen des Bettes nicht behindern.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SCHMERZEN">
				<xs:annotation>
					<xs:documentation>Liegen bei dem Bewohner bzw. der Bewohnerin Anzeichen für länger andauernde Schmerzen vor (z.B. Äußerungen des Bewohners bzw. der Bewohnerin oder Einnahme von Analgetika)?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>75</das:ref_number>
						<das:caption_id>13</das:caption_id>
						<das:caption_header>Schmerz</das:caption_header>
						<das:guideline>
							<div>
								<p>Es geht in dieser Frage um die Feststellung, ob überhaupt eine Schmerzproblematik besteht (und somit ein Bedarf, den Bewohner bzw. die Bewohnerin im Umgang mit seinen bzw. ihren Schmerzen ärztlich und/oder pflegerisch zu unterstützen). Beantworten Sie die Frage mit „ja“, wenn aus den Äußerungen des Bewohners bzw. der Bewohnerin oder der Dokumentation hervorgeht, dass Schmerzen über mehrere Wochen oder Monate bestehen oder eine Schmerzproblematik zwar mit Unterbrechungen, aber wiederholt auftritt. Auch die regelmäßige Einnahme von Schmerzmedikamenten oder die regelmäßige Anwendung anderer schmerzlindernder Maßnahmen lassen auf eine bestehende Schmerzproblematik schließen. Einmalig auftretende Schmerzen, z.B. Kopfschmerzen am Tag der Erhebung, sind nicht zu berücksichtigen.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SCHMERZFREI">
				<xs:annotation>
					<xs:documentation>Ist der Bewohner bzw. die Bewohnerin durch eine medikamentöse Schmerzbehandlung schmerzfrei?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>76</das:ref_number>
						<das:caption_id>13</das:caption_id>
						<das:caption_header>Schmerz</das:caption_header>
						<das:guideline>
							<div>
								<p>Beantworten Sie die Frage mit „ja“, wenn der Bewohner bzw. die Bewohnerin schmerzlindernde Medikamente einnimmt und dadurch keine Schmerzen mehr hat. Wenn keine schmerzlindernden Medikamente eingenommen werden oder die Schmerzen nur gelindert werden, aber nicht verschwinden, so geben Sie bitte „nein“ an.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SCHMERZEINSCH">
				<xs:annotation>
					<xs:documentation>Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>77</das:ref_number>
						<das:caption_id>13</das:caption_id>
						<das:caption_header>Schmerz</das:caption_header>
						<das:guideline>
							<div>
								<p>Beantworten Sie die Frage nach der differenzierten Schmerzeinschätzung mit „ja“, wenn in der Pflegedokumentation zu dieser Einschätzung mindestens Angaben über Schmerzintensität und Lokalisation vermerkt sind, diese Angaben sind für die Antwort „ja“ Voraussetzung. Weitere Aspekte können z.B. Schmerzqualität, Dauer, zeitliche Verlaufsmuster, verstärkende oder lindernde Faktoren sowie Auswirkungen des Schmerzes auf das Alltagsleben sein. Wurde der Bewohner bzw. die Bewohnerin lediglich danach gefragt, ob er Schmerzen hat, ohne weitere Aspekte der Schmerzsituation zu beurteilen, so handelt es sich nicht um eine differenzierte Schmerzeinschätzung; die Frage nach der differenzierten Schmerzeinschätzung wäre also mit „nein“ zu beantworten. Das könnte sich z.B. bei Bewohnern bzw. Bewohnerinnen ergeben, die aufgrund einer medikamentösen Behandlung vollkommen schmerzfrei sind.</p>
								<p>Bei Bewohnerinnen und Bewohnern, bei denen aufgrund fortgeschrittener kognitiver Einschränkung keine Selbstauskunft über Schmerzintensität und -lokalisation möglich ist, erfolgt eine qualifizierte Beobachtung/Fremdeinschätzung.</p>
								<p>
									<b>Für diese Bewohnergruppe gilt:</b>
								</p>
								<p>Das Feld „Schmerzintensität“ ist anzukreuzen, wenn die Pflegedokumentation keine gesicherten Aussagen zur Schmerzintensität, jedoch nachvollziehbare beschreibende Angaben (Beobachtungen) zu vermuteten Schmerzen und zu Auswirkungen auf den Alltag enthält (z. B. Bewohnerin zeigt Schmerzreaktionen wie Abwehrhaltung/Schonhaltung/verzerrtes Gesicht beim Heraussetzen aus dem Bett).</p>
								<p>Das Feld „Schmerzlokalisation“ ist anzukreuzen, wenn die Pflegedokumentation keine gesicherten Aussagen zur Schmerzlokalisation, jedoch nachvollziehbare Angaben zur Schmerzlokalisation enthält (z. B. aufgrund einer ärztlichen Diagnose oder beschreibend wie „Bewohnerin hat vermutlich starke Schmerzen im rechten Bein, sie vermeidet es, mit dem Bein aufzutreten“).</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SCHMERZEINSCHDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Dokumentation der Schmerzeinschätzung</xs:documentation>
					<xs:appinfo>
						<das:ref_number>78</das:ref_number>
						<das:caption_id>13</das:caption_id>
						<das:caption_header>Schmerz</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="SCHMERZEINSCHINFO" maxOccurs="4">
				<xs:annotation>
					<xs:documentation>Welche Informationen liegen über die Ergebnisse dieser Schmerzeinschätzung vor?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>79</das:ref_number>
						<das:caption_id>13</das:caption_id>
						<das:caption_header>Schmerz</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_schmerzeinschaetzung_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="NEUEINZUG">
				<xs:annotation>
					<xs:documentation>Ist der Bewohner bzw. die Bewohnerin nach der letzten Ergebniserfassung neu in die Einrichtung eingezogen?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>80</das:ref_number>
						<das:caption_id>14</das:caption_id>
						<das:caption_header>Einzug</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="EINZUGNACHKZP">
				<xs:annotation>
					<xs:documentation>Erfolgte der Einzug direkt im Anschluss an einen Kurzzeit- bzw. Verhinderungspflegeaufenthalt in der Einrichtung (ohne zeitliche Lücke)?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>81</das:ref_number>
						<das:caption_id>14</das:caption_id>
						<das:caption_header>Einzug</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="EINZUGNACHKZPDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Beginn des Kurzzeit- bzw. Verhinderungspflegeaufenthalts</xs:documentation>
					<xs:appinfo>
						<das:ref_number>82</das:ref_number>
						<das:caption_id>14</das:caption_id>
						<das:caption_header>Einzug</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="EINZUGKHBEHANDLUNG">
				<xs:annotation>
					<xs:documentation>Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>83</das:ref_number>
						<das:caption_id>14</das:caption_id>
						<das:caption_header>Einzug</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="EINZUGKHBEGINNDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug</xs:documentation>
					<xs:appinfo>
						<das:ref_number>84</das:ref_number>
						<das:caption_id>14</das:caption_id>
						<das:caption_header>Einzug</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="EINZUGKHENDEDATUM">
				<xs:annotation>
					<xs:documentation>Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug</xs:documentation>
					<xs:appinfo>
						<das:ref_number>85</das:ref_number>
						<das:caption_id>14</das:caption_id>
						<das:caption_header>Einzug</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="EINZUGGESPR">
				<xs:annotation>
					<xs:documentation>Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>86</das:ref_number>
						<das:caption_id>14</das:caption_id>
						<das:caption_header>Einzug</das:caption_header>
						<das:guideline>
							<div>
								<p>Mit diesen Fragen ist ein planvolles, zielgerichtetes Gespräch gemeint („Integrationsgespräch“), ein Gespräch, das geplant und ausdrücklich zu dem Zweck geführt wurde, das Einleben des Bewohners bzw. der Bewohnerin in der Einrichtung gemeinsam mit ihm bzw. ihr und/oder anderen Bezugspersonen zu besprechen. Eine schriftliche Befragung des Bewohners bzw. der Bewohnerin oder der Angehörigen zum Einzug ist damit nicht gemeint. Inhalt des Gesprächs könnte z.B. sein, ob der Bewohner bzw. die Bewohnerin zufrieden mit der Tagesstrukturierung ist oder ob er bzw. sie spezielle Wünsche im Hinblick auf die pflegerische Versorgung hat. Nicht gemeint sind Gespräche, die sich zufällig ergeben, beispielsweise während der pflegerischen Versorgung. Geben Sie bitte auch an, welche Personen an dem Integrationsgespräch teilgenommen haben. Mitarbeiterinnen und Mitarbeiter der Einrichtung sind dabei nicht zu berücksichtigen. Es ist denkbar, dass ein Gespräch geplant, aber nicht möglich war, weil der Bewohner bzw. die Bewohnerin stark kognitiv beeinträchtigt war und es keine Bezugspersonen gab, die bereit waren, an einem Gespräch teilzunehmen. In diesem Fall wählen Sie bitte die Antwortoption <i>„nicht möglich aufgrund fehlender Vertrauenspersonen des Bewohners bzw. der Bewohnerin“.</i>
								</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jnNichtMoeglich_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="EINZUGGESPRDATUM">
				<xs:annotation>
					<xs:documentation>Datum des Integrationsgesprächs</xs:documentation>
					<xs:appinfo>
						<das:ref_number>87</das:ref_number>
						<das:caption_id>14</das:caption_id>
						<das:caption_header>Einzug</das:caption_header>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="xs:date" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="EINZUGGESPRTEILNEHMER" maxOccurs="4">
				<xs:annotation>
					<xs:documentation>Wer hat an dem Integrationsgespräch teilgenommen?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>88</das:ref_number>
						<das:caption_id>14</das:caption_id>
						<das:caption_header>Einzug</das:caption_header>
						<das:guideline>
							<div>
								<p>Mit diesen Fragen ist ein planvolles, zielgerichtetes Gespräch gemeint („Integrationsgespräch“), ein Gespräch, das geplant und ausdrücklich zu dem Zweck geführt wurde, das Einleben des Bewohners bzw. der Bewohnerin in der Einrichtung gemeinsam mit ihm bzw. ihr und/oder anderen Bezugspersonen zu besprechen. Eine schriftliche Befragung des Bewohners bzw. der Bewohnerin oder der Angehörigen zum Einzug ist damit nicht gemeint. Inhalt des Gesprächs könnte z.B. sein, ob der Bewohner bzw. die Bewohnerin zufrieden mit der Tagesstrukturierung ist oder ob er bzw. sie spezielle Wünsche im Hinblick auf die pflegerische Versorgung hat. Nicht gemeint sind Gespräche, die sich zufällig ergeben, beispielsweise während der pflegerischen Versorgung. Geben Sie bitte auch an, welche Personen an dem Integrationsgespräch teilgenommen haben. Mitarbeiterinnen und Mitarbeiter der Einrichtung sind dabei nicht zu berücksichtigen. Es ist denkbar, dass ein Gespräch geplant, aber nicht möglich war, weil der Bewohner bzw. die Bewohnerin stark kognitiv beeinträchtigt war und es keine Bezugspersonen gab, die bereit waren, an einem Gespräch teilzunehmen. In diesem Fall wählen Sie bitte die Antwortoption <i>„nicht möglich aufgrund fehlender Vertrauenspersonen des Bewohners bzw. der Bewohnerin“.</i>
								</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_teilnehmer_type" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="EINZUGGESPRDOKU">
				<xs:annotation>
					<xs:documentation>Wurden die Ergebnisse dieses Gespräches dokumentiert?</xs:documentation>
					<xs:appinfo>
						<das:ref_number>89</das:ref_number>
						<das:caption_id>14</das:caption_id>
						<das:caption_header>Einzug</das:caption_header>
						<das:guideline>
							<div>
								<p>Geben Sie bitte nur „ja“ an, wenn nach dem Gespräch Ergebnisse, z.B. Wünsche des Bewohners bzw. der Bewohnerin und Ziele für die zukünftige Versorgung festgehalten wurden. Auch wenn der Bewohner bzw. die Bewohnerin keine Veränderungen wünscht und dies dokumentiert wurde, geben Sie bitte „ja“ an.</p>
							</div>
						</das:guideline>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="value" type="enum_jn_type" use="optional"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:assert test="if(not(exists(IDBEWOHNER/@value)) or string-length(xs:string(IDBEWOHNER/@value)) = 0 or xs:string(IDBEWOHNER/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10001"/>
					<das:rule_text value="Im Pflichtfeld [1: 'Bewohnerbezogene Nummer'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="IDBEWOHNER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(ERHEBUNGSDATUM/@value)) or string-length(xs:string(ERHEBUNGSDATUM/@value)) = 0 or xs:string(ERHEBUNGSDATUM/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10003"/>
					<das:rule_text value="Im Pflichtfeld [3: 'Datum der Ergebniserfassung'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(EINZUGSDATUM/@value)) or string-length(xs:string(EINZUGSDATUM/@value)) = 0 or xs:string(EINZUGSDATUM/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10004"/>
					<das:rule_text value="Im Pflichtfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(GEBURTSMONAT/@value)) or string-length(xs:string(GEBURTSMONAT/@value)) = 0 or xs:string(GEBURTSMONAT/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10005"/>
					<das:rule_text value="Im Pflichtfeld [5: 'Geburtsmonat'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GEBURTSMONAT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(GEBURTSJAHR/@value)) or string-length(xs:string(GEBURTSJAHR/@value)) = 0 or xs:string(GEBURTSJAHR/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10006"/>
					<das:rule_text value="Im Pflichtfeld [6: 'Geburtsjahr'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GEBURTSJAHR"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(PFLEGEGRAD/@value)) or string-length(xs:string(PFLEGEGRAD/@value)) = 0 or xs:string(PFLEGEGRAD/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10008"/>
					<das:rule_text value="Im Pflichtfeld [7: 'Ist ein Pflegegrad vorhanden?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="PFLEGEGRAD"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(APOPLEX/@value)) or string-length(xs:string(APOPLEX/@value)) = 0 or xs:string(APOPLEX/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10009"/>
					<das:rule_text value="Im Pflichtfeld [8: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Apoplex gekommen?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="APOPLEX"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(FRAKTUR/@value)) or string-length(xs:string(FRAKTUR/@value)) = 0 or xs:string(FRAKTUR/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10010"/>
					<das:rule_text value="Im Pflichtfeld [10: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Fraktur gekommen?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="FRAKTUR"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(HERZINFARKT/@value)) or string-length(xs:string(HERZINFARKT/@value)) = 0 or xs:string(HERZINFARKT/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10011"/>
					<das:rule_text value="Im Pflichtfeld [12: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Herzinfarkt gekommen?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="HERZINFARKT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(AMPUTATION/@value)) or string-length(xs:string(AMPUTATION/@value)) = 0 or xs:string(AMPUTATION/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10012"/>
					<das:rule_text value="Im Pflichtfeld [14: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Amputation gekommen?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="AMPUTATION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KHBEHANDLUNG/@value)) or string-length(xs:string(KHBEHANDLUNG/@value)) = 0 or xs:string(KHBEHANDLUNG/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10013"/>
					<das:rule_text value="Im Pflichtfeld [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(BEWUSSTSEINSZUSTAND/@value)) or string-length(xs:string(BEWUSSTSEINSZUSTAND/@value)) = 0 or xs:string(BEWUSSTSEINSZUSTAND/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10015"/>
					<das:rule_text value="Im Pflichtfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(MOBILUMSETZEN/@value)) or string-length(xs:string(MOBILUMSETZEN/@value)) = 0 or xs:string(MOBILUMSETZEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10016"/>
					<das:rule_text value="Im Pflichtfeld [23: 'Sich Umsetzen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILUMSETZEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFERINNERN/@value)) or string-length(xs:string(KKFERINNERN/@value)) = 0 or xs:string(KKFERINNERN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10017"/>
					<das:rule_text value="Im Pflichtfeld [29: 'Sich Erinnern'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFERINNERN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVKOPF/@value)) or string-length(xs:string(SVKOPF/@value)) = 0 or xs:string(SVKOPF/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10018"/>
					<das:rule_text value="Im Pflichtfeld [43: 'Körperpflege im Bereich des Kopfes'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVKOPF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(every $v in DIAGNOSEN/@value satisfies not(exists($v)) or string-length(xs:string($v)) = 0 or xs:string($v) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10019"/>
					<das:rule_text value="Im Pflichtfeld [20: 'Ärztliche Diagnosen für den Bewohner bzw. die Bewohnerin'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DIAGNOSEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(MOBILPOSWECHSEL/@value)) or string-length(xs:string(MOBILPOSWECHSEL/@value)) = 0 or xs:string(MOBILPOSWECHSEL/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10020"/>
					<das:rule_text value="Im Pflichtfeld [21: 'Positionswechsel im Bett'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILPOSWECHSEL"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(MOBILSITZPOSITION/@value)) or string-length(xs:string(MOBILSITZPOSITION/@value)) = 0 or xs:string(MOBILSITZPOSITION/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10021"/>
					<das:rule_text value="Im Pflichtfeld [22: 'Halten einer stabilen Sitzposition'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILSITZPOSITION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(MOBILFORTBEWEGUNG/@value)) or string-length(xs:string(MOBILFORTBEWEGUNG/@value)) = 0 or xs:string(MOBILFORTBEWEGUNG/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10022"/>
					<das:rule_text value="Im Pflichtfeld [24: 'Fortbewegen innerhalb des Wohnbereichs'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILFORTBEWEGUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(MOBILTREPPENSTEIGEN/@value)) or string-length(xs:string(MOBILTREPPENSTEIGEN/@value)) = 0 or xs:string(MOBILTREPPENSTEIGEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10023"/>
					<das:rule_text value="Im Pflichtfeld [25: 'Treppensteigen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILTREPPENSTEIGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFERKENNEN/@value)) or string-length(xs:string(KKFERKENNEN/@value)) = 0 or xs:string(KKFERKENNEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10024"/>
					<das:rule_text value="Im Pflichtfeld [26: 'Erkennen von Personen aus dem näheren Umfeld'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFERKENNEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFORIENTOERTLICH/@value)) or string-length(xs:string(KKFORIENTOERTLICH/@value)) = 0 or xs:string(KKFORIENTOERTLICH/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10025"/>
					<das:rule_text value="Im Pflichtfeld [27: 'Örtliche Orientierung'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFORIENTOERTLICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFORIENTZEITLICH/@value)) or string-length(xs:string(KKFORIENTZEITLICH/@value)) = 0 or xs:string(KKFORIENTZEITLICH/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10026"/>
					<das:rule_text value="Im Pflichtfeld [28: 'Zeitliche Orientierung'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFORIENTZEITLICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFHANDLUNGEN/@value)) or string-length(xs:string(KKFHANDLUNGEN/@value)) = 0 or xs:string(KKFHANDLUNGEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10027"/>
					<das:rule_text value="Im Pflichtfeld [30: 'Steuern von mehrschrittigen Alltagshandlungen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFHANDLUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFENTSCHEIDUNGEN/@value)) or string-length(xs:string(KKFENTSCHEIDUNGEN/@value)) = 0 or xs:string(KKFENTSCHEIDUNGEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10028"/>
					<das:rule_text value="Im Pflichtfeld [31: 'Treffen von Entscheidungen im Alltagsleben'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFENTSCHEIDUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFVERSTEHENINFO/@value)) or string-length(xs:string(KKFVERSTEHENINFO/@value)) = 0 or xs:string(KKFVERSTEHENINFO/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10029"/>
					<das:rule_text value="Im Pflichtfeld [32: 'Verstehen von Sachverhalten und Informationen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFVERSTEHENINFO"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFGEFAHRERKENNEN/@value)) or string-length(xs:string(KKFGEFAHRERKENNEN/@value)) = 0 or xs:string(KKFGEFAHRERKENNEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10030"/>
					<das:rule_text value="Im Pflichtfeld [33: 'Erkennen von Risiken und Gefahren'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFGEFAHRERKENNEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFMITTEILEN/@value)) or string-length(xs:string(KKFMITTEILEN/@value)) = 0 or xs:string(KKFMITTEILEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10031"/>
					<das:rule_text value="Im Pflichtfeld [34: 'Mitteilen von elementaren Bedürfnissen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFMITTEILEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFVERSTEHENAUF/@value)) or string-length(xs:string(KKFVERSTEHENAUF/@value)) = 0 or xs:string(KKFVERSTEHENAUF/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10032"/>
					<das:rule_text value="Im Pflichtfeld [35: 'Verstehen von Aufforderungen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFVERSTEHENAUF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KKFBETEILIGUNG/@value)) or string-length(xs:string(KKFBETEILIGUNG/@value)) = 0 or xs:string(KKFBETEILIGUNG/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10033"/>
					<das:rule_text value="Im Pflichtfeld [36: 'Beteiligung an einem Gespräch'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFBETEILIGUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVESSEN/@value)) or string-length(xs:string(SVESSEN/@value)) = 0 or xs:string(SVESSEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10034"/>
					<das:rule_text value="Im Pflichtfeld [49: 'Essen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVESSEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVTRINKEN/@value)) or string-length(xs:string(SVTRINKEN/@value)) = 0 or xs:string(SVTRINKEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10035"/>
					<das:rule_text value="Im Pflichtfeld [50: 'Trinken'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVTRINKEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVERNAEHRUNG/@value)) or string-length(xs:string(SVERNAEHRUNG/@value)) = 0 or xs:string(SVERNAEHRUNG/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10036"/>
					<das:rule_text value="Im Pflichtfeld [37: 'Erfolgt die Ernährung des Bewohners bzw. der Bewohnerin parenteral oder über eine Sonde?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVERNAEHRUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVHARNKONTINENZ/@value)) or string-length(xs:string(SVHARNKONTINENZ/@value)) = 0 or xs:string(SVHARNKONTINENZ/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10037"/>
					<das:rule_text value="Im Pflichtfeld [40: 'Blasenkontrolle/Harnkontinenz'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVHARNKONTINENZ"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVSTUHLKONTINENZ/@value)) or string-length(xs:string(SVSTUHLKONTINENZ/@value)) = 0 or xs:string(SVSTUHLKONTINENZ/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10038"/>
					<das:rule_text value="Im Pflichtfeld [41: 'Darmkontrolle/Stuhlkontinenz'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVSTUHLKONTINENZ"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVOBERKOERPER/@value)) or string-length(xs:string(SVOBERKOERPER/@value)) = 0 or xs:string(SVOBERKOERPER/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10039"/>
					<das:rule_text value="Im Pflichtfeld [42: 'Waschen des vorderen Oberkörpers'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVOBERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVINTIMBEREICH/@value)) or string-length(xs:string(SVINTIMBEREICH/@value)) = 0 or xs:string(SVINTIMBEREICH/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10040"/>
					<das:rule_text value="Im Pflichtfeld [44: 'Waschen des Intimbereichs'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVINTIMBEREICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVDUSCHENBADEN/@value)) or string-length(xs:string(SVDUSCHENBADEN/@value)) = 0 or xs:string(SVDUSCHENBADEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10041"/>
					<das:rule_text value="Im Pflichtfeld [45: 'Duschen oder Baden einschließlich Waschen der Haare'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVDUSCHENBADEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVANAUSOBERKOERPER/@value)) or string-length(xs:string(SVANAUSOBERKOERPER/@value)) = 0 or xs:string(SVANAUSOBERKOERPER/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10042"/>
					<das:rule_text value="Im Pflichtfeld [46: 'An- und Auskleiden des Oberkörpers'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVANAUSOBERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVANAUSUNTERKOERPER/@value)) or string-length(xs:string(SVANAUSUNTERKOERPER/@value)) = 0 or xs:string(SVANAUSUNTERKOERPER/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10043"/>
					<das:rule_text value="Im Pflichtfeld [47: 'An- und Auskleiden des Unterkörpers'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVANAUSUNTERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVNAHRUNGZUBEREITEN/@value)) or string-length(xs:string(SVNAHRUNGZUBEREITEN/@value)) = 0 or xs:string(SVNAHRUNGZUBEREITEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10044"/>
					<das:rule_text value="Im Pflichtfeld [48: 'Mundgerechtes Zubereiten der Nahrung, Eingießen von Getränken'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVNAHRUNGZUBEREITEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SVTOILETTE/@value)) or string-length(xs:string(SVTOILETTE/@value)) = 0 or xs:string(SVTOILETTE/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10045"/>
					<das:rule_text value="Im Pflichtfeld [51: 'Benutzen einer Toilette oder eines Toilettenstuhls'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVTOILETTE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(GATAGESABLAUF/@value)) or string-length(xs:string(GATAGESABLAUF/@value)) = 0 or xs:string(GATAGESABLAUF/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10046"/>
					<das:rule_text value="Im Pflichtfeld [54: 'Tagesablauf gestalten und an Veränderungen anpassen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GATAGESABLAUF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(GARUHENSCHLAFEN/@value)) or string-length(xs:string(GARUHENSCHLAFEN/@value)) = 0 or xs:string(GARUHENSCHLAFEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10047"/>
					<das:rule_text value="Im Pflichtfeld [55: 'Ruhen und Schlafen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GARUHENSCHLAFEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(GABESCHAEFTIGEN/@value)) or string-length(xs:string(GABESCHAEFTIGEN/@value)) = 0 or xs:string(GABESCHAEFTIGEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10048"/>
					<das:rule_text value="Im Pflichtfeld [56: 'Sich beschäftigen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GABESCHAEFTIGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(GAPLANUNGEN/@value)) or string-length(xs:string(GAPLANUNGEN/@value)) = 0 or xs:string(GAPLANUNGEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10049"/>
					<das:rule_text value="Im Pflichtfeld [57: 'In die Zukunft gerichtete Planungen vornehmen'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GAPLANUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(GAINTERAKTION/@value)) or string-length(xs:string(GAINTERAKTION/@value)) = 0 or xs:string(GAINTERAKTION/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10050"/>
					<das:rule_text value="Im Pflichtfeld [58: 'Interaktion mit Personen im direkten Kontakt'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GAINTERAKTION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(GAKONTAKTPFLEGE/@value)) or string-length(xs:string(GAKONTAKTPFLEGE/@value)) = 0 or xs:string(GAKONTAKTPFLEGE/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10051"/>
					<das:rule_text value="Im Pflichtfeld [59: 'Kontaktpflege zu Personen außerhalb des direkten Umfeldes'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GAKONTAKTPFLEGE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(DEKUBITUS/@value)) or string-length(xs:string(DEKUBITUS/@value)) = 0 or xs:string(DEKUBITUS/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10052"/>
					<das:rule_text value="Im Pflichtfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(every $v in KOERPERGEWICHTDOKU/@value satisfies not(exists($v)) or string-length(xs:string($v)) = 0 or xs:string($v) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10054"/>
					<das:rule_text value="Im Pflichtfeld [70: 'Welche der aufgeführten Punkte trafen laut Pflegedokumentation für den Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung zu?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHTDOKU"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(STURZ/@value)) or string-length(xs:string(STURZ/@value)) = 0 or xs:string(STURZ/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10055"/>
					<das:rule_text value="Im Pflichtfeld [71: 'Ist der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in der Einrichtung gestürzt?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="STURZ"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(GURT/@value)) or string-length(xs:string(GURT/@value)) = 0 or xs:string(GURT/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10056"/>
					<das:rule_text value="Im Pflichtfeld [73: 'Wurden bei dem Bewohner bzw. der Bewohnerin in den vergangenen 4 Wochen Gurte angewendet?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GURT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SEITENTEILE/@value)) or string-length(xs:string(SEITENTEILE/@value)) = 0 or xs:string(SEITENTEILE/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10057"/>
					<das:rule_text value="Im Pflichtfeld [74: 'Wurden bei dem Bewohner bzw. der Bewohnerin in den vergangenen 4 Wochen Bettseitenteile angewendet?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SEITENTEILE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(SCHMERZEN/@value)) or string-length(xs:string(SCHMERZEN/@value)) = 0 or xs:string(SCHMERZEN/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10058"/>
					<das:rule_text value="Im Pflichtfeld [75: 'Liegen bei dem Bewohner bzw. der Bewohnerin Anzeichen für länger andauernde Schmerzen vor (z.B. Äußerungen des Bewohners bzw. der Bewohnerin oder Einnahme von Analgetika)?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(NEUEINZUG/@value)) or string-length(xs:string(NEUEINZUG/@value)) = 0 or xs:string(NEUEINZUG/@value) = '') then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="10059"/>
					<das:rule_text value="Im Pflichtfeld [80: 'Ist der Bewohner bzw. die Bewohnerin nach der letzten Ergebniserfassung neu in die Einrichtung eingezogen?'] ist kein Wert angegeben"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="NEUEINZUG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GEBURTSMONAT/@value) and not(xs:string(GEBURTSMONAT/@value) = ('1','2','3','4','5','6','7','8','9','10','11','12'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20001"/>
					<das:rule_text value="Der Wert des Datenfeldes [5: 'Geburtsmonat'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 1 bis 12"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GEBURTSMONAT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(PFLEGEGRAD/@value) and not(xs:string(PFLEGEGRAD/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20003"/>
					<das:rule_text value="Der Wert des Datenfeldes [7: 'Ist ein Pflegegrad vorhanden?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="PFLEGEGRAD"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(APOPLEX/@value) and not(xs:string(APOPLEX/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20004"/>
					<das:rule_text value="Der Wert des Datenfeldes [8: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Apoplex gekommen?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="APOPLEX"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(FRAKTUR/@value) and not(xs:string(FRAKTUR/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20005"/>
					<das:rule_text value="Der Wert des Datenfeldes [10: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Fraktur gekommen?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="FRAKTUR"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(HERZINFARKT/@value) and not(xs:string(HERZINFARKT/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20006"/>
					<das:rule_text value="Der Wert des Datenfeldes [12: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Herzinfarkt gekommen?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="HERZINFARKT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(AMPUTATION/@value) and not(xs:string(AMPUTATION/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20007"/>
					<das:rule_text value="Der Wert des Datenfeldes [14: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Amputation gekommen?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="AMPUTATION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KHBEHANDLUNG/@value) and not(xs:string(KHBEHANDLUNG/@value) = ('0','1','2'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20008"/>
					<das:rule_text value="Der Wert des Datenfeldes [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1 oder 2"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(BEWUSSTSEINSZUSTAND/@value) and not(xs:string(BEWUSSTSEINSZUSTAND/@value) = ('1','2','3','4','5'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20010"/>
					<das:rule_text value="Der Wert des Datenfeldes [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 1, 2, 3, 4 oder 5"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in DIAGNOSEN/@value satisfies not(xs:string($v) = ('0','1','2','3','4'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20011"/>
					<das:rule_text value="Mindestens eine Angabe im Datenfeld [20: 'Ärztliche Diagnosen für den Bewohner bzw. die Bewohnerin'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2, 3 oder 4"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DIAGNOSEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(MOBILPOSWECHSEL/@value) and not(xs:string(MOBILPOSWECHSEL/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20012"/>
					<das:rule_text value="Der Wert des Datenfeldes [21: 'Positionswechsel im Bett'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILPOSWECHSEL"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(MOBILSITZPOSITION/@value) and not(xs:string(MOBILSITZPOSITION/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20013"/>
					<das:rule_text value="Der Wert des Datenfeldes [22: 'Halten einer stabilen Sitzposition'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILSITZPOSITION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(MOBILUMSETZEN/@value) and not(xs:string(MOBILUMSETZEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20014"/>
					<das:rule_text value="Der Wert des Datenfeldes [23: 'Sich Umsetzen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILUMSETZEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(MOBILFORTBEWEGUNG/@value) and not(xs:string(MOBILFORTBEWEGUNG/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20015"/>
					<das:rule_text value="Der Wert des Datenfeldes [24: 'Fortbewegen innerhalb des Wohnbereichs'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILFORTBEWEGUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(MOBILTREPPENSTEIGEN/@value) and not(xs:string(MOBILTREPPENSTEIGEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20016"/>
					<das:rule_text value="Der Wert des Datenfeldes [25: 'Treppensteigen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILTREPPENSTEIGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFERKENNEN/@value) and not(xs:string(KKFERKENNEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20017"/>
					<das:rule_text value="Der Wert des Datenfeldes [26: 'Erkennen von Personen aus dem näheren Umfeld'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFERKENNEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFORIENTOERTLICH/@value) and not(xs:string(KKFORIENTOERTLICH/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20018"/>
					<das:rule_text value="Der Wert des Datenfeldes [27: 'Örtliche Orientierung'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFORIENTOERTLICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFORIENTZEITLICH/@value) and not(xs:string(KKFORIENTZEITLICH/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20019"/>
					<das:rule_text value="Der Wert des Datenfeldes [28: 'Zeitliche Orientierung'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFORIENTZEITLICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFERINNERN/@value) and not(xs:string(KKFERINNERN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20020"/>
					<das:rule_text value="Der Wert des Datenfeldes [29: 'Sich Erinnern'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFERINNERN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFHANDLUNGEN/@value) and not(xs:string(KKFHANDLUNGEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20021"/>
					<das:rule_text value="Der Wert des Datenfeldes [30: 'Steuern von mehrschrittigen Alltagshandlungen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFHANDLUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFENTSCHEIDUNGEN/@value) and not(xs:string(KKFENTSCHEIDUNGEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20022"/>
					<das:rule_text value="Der Wert des Datenfeldes [31: 'Treffen von Entscheidungen im Alltagsleben'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFENTSCHEIDUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFVERSTEHENINFO/@value) and not(xs:string(KKFVERSTEHENINFO/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20023"/>
					<das:rule_text value="Der Wert des Datenfeldes [32: 'Verstehen von Sachverhalten und Informationen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFVERSTEHENINFO"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFGEFAHRERKENNEN/@value) and not(xs:string(KKFGEFAHRERKENNEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20024"/>
					<das:rule_text value="Der Wert des Datenfeldes [33: 'Erkennen von Risiken und Gefahren'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFGEFAHRERKENNEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFMITTEILEN/@value) and not(xs:string(KKFMITTEILEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20025"/>
					<das:rule_text value="Der Wert des Datenfeldes [34: 'Mitteilen von elementaren Bedürfnissen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFMITTEILEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFVERSTEHENAUF/@value) and not(xs:string(KKFVERSTEHENAUF/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20026"/>
					<das:rule_text value="Der Wert des Datenfeldes [35: 'Verstehen von Aufforderungen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFVERSTEHENAUF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFBETEILIGUNG/@value) and not(xs:string(KKFBETEILIGUNG/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20027"/>
					<das:rule_text value="Der Wert des Datenfeldes [36: 'Beteiligung an einem Gespräch'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFBETEILIGUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVERNAEHRUNG/@value) and not(xs:string(SVERNAEHRUNG/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20028"/>
					<das:rule_text value="Der Wert des Datenfeldes [37: 'Erfolgt die Ernährung des Bewohners bzw. der Bewohnerin parenteral oder über eine Sonde?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVERNAEHRUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVFREMDHILFE/@value) and not(xs:string(SVFREMDHILFE/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20029"/>
					<das:rule_text value="Der Wert des Datenfeldes [38: 'Erfolgt die Bedienung selbständig oder mit Fremdhilfe?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVFREMDHILFE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVERNAEHRUNGUMFANG/@value) and not(xs:string(SVERNAEHRUNGUMFANG/@value) = ('0','6','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20030"/>
					<das:rule_text value="Der Wert des Datenfeldes [39: 'In welchem Umfang erfolgt eine künstliche Ernährung?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 3 oder 6"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVERNAEHRUNGUMFANG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVHARNKONTINENZ/@value) and not(xs:string(SVHARNKONTINENZ/@value) = ('0','1','2','3','4'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20031"/>
					<das:rule_text value="Der Wert des Datenfeldes [40: 'Blasenkontrolle/Harnkontinenz'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2, 3 oder 4"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVHARNKONTINENZ"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVSTUHLKONTINENZ/@value) and not(xs:string(SVSTUHLKONTINENZ/@value) = ('0','1','2','3','4'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20032"/>
					<das:rule_text value="Der Wert des Datenfeldes [41: 'Darmkontrolle/Stuhlkontinenz'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2, 3 oder 4"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVSTUHLKONTINENZ"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVOBERKOERPER/@value) and not(xs:string(SVOBERKOERPER/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20033"/>
					<das:rule_text value="Der Wert des Datenfeldes [42: 'Waschen des vorderen Oberkörpers'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVOBERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVKOPF/@value) and not(xs:string(SVKOPF/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20034"/>
					<das:rule_text value="Der Wert des Datenfeldes [43: 'Körperpflege im Bereich des Kopfes'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVKOPF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVINTIMBEREICH/@value) and not(xs:string(SVINTIMBEREICH/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20035"/>
					<das:rule_text value="Der Wert des Datenfeldes [44: 'Waschen des Intimbereichs'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVINTIMBEREICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVDUSCHENBADEN/@value) and not(xs:string(SVDUSCHENBADEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20036"/>
					<das:rule_text value="Der Wert des Datenfeldes [45: 'Duschen oder Baden einschließlich Waschen der Haare'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVDUSCHENBADEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVANAUSOBERKOERPER/@value) and not(xs:string(SVANAUSOBERKOERPER/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20037"/>
					<das:rule_text value="Der Wert des Datenfeldes [46: 'An- und Auskleiden des Oberkörpers'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVANAUSOBERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVANAUSUNTERKOERPER/@value) and not(xs:string(SVANAUSUNTERKOERPER/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20038"/>
					<das:rule_text value="Der Wert des Datenfeldes [47: 'An- und Auskleiden des Unterkörpers'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVANAUSUNTERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVNAHRUNGZUBEREITEN/@value) and not(xs:string(SVNAHRUNGZUBEREITEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20039"/>
					<das:rule_text value="Der Wert des Datenfeldes [48: 'Mundgerechtes Zubereiten der Nahrung, Eingießen von Getränken'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVNAHRUNGZUBEREITEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVESSEN/@value) and not(xs:string(SVESSEN/@value) = ('0','3','6','9'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20040"/>
					<das:rule_text value="Der Wert des Datenfeldes [49: 'Essen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 3, 6 oder 9"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVESSEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVTRINKEN/@value) and not(xs:string(SVTRINKEN/@value) = ('0','2','4','6'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20041"/>
					<das:rule_text value="Der Wert des Datenfeldes [50: 'Trinken'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 2, 4 oder 6"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVTRINKEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVTOILETTE/@value) and not(xs:string(SVTOILETTE/@value) = ('0','2','4','6'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20042"/>
					<das:rule_text value="Der Wert des Datenfeldes [51: 'Benutzen einer Toilette oder eines Toilettenstuhls'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 2, 4 oder 6"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVTOILETTE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVHARNKONTINENZBEW/@value) and not(xs:string(SVHARNKONTINENZBEW/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20043"/>
					<das:rule_text value="Der Wert des Datenfeldes [52: 'Bewältigung der Folgen einer Harninkontinenz (auch Umgang mit Dauerkatheter/Urostoma)'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVHARNKONTINENZBEW"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVSTUHLKONTINENZBEW/@value) and not(xs:string(SVSTUHLKONTINENZBEW/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20044"/>
					<das:rule_text value="Der Wert des Datenfeldes [53: 'Bewältigung der Folgen einer Stuhlinkontinenz (auch Umgang mit Stoma)'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVSTUHLKONTINENZBEW"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GATAGESABLAUF/@value) and not(xs:string(GATAGESABLAUF/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20045"/>
					<das:rule_text value="Der Wert des Datenfeldes [54: 'Tagesablauf gestalten und an Veränderungen anpassen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GATAGESABLAUF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GARUHENSCHLAFEN/@value) and not(xs:string(GARUHENSCHLAFEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20046"/>
					<das:rule_text value="Der Wert des Datenfeldes [55: 'Ruhen und Schlafen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GARUHENSCHLAFEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GABESCHAEFTIGEN/@value) and not(xs:string(GABESCHAEFTIGEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20047"/>
					<das:rule_text value="Der Wert des Datenfeldes [56: 'Sich beschäftigen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GABESCHAEFTIGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GAPLANUNGEN/@value) and not(xs:string(GAPLANUNGEN/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20048"/>
					<das:rule_text value="Der Wert des Datenfeldes [57: 'In die Zukunft gerichtete Planungen vornehmen'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GAPLANUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GAINTERAKTION/@value) and not(xs:string(GAINTERAKTION/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20049"/>
					<das:rule_text value="Der Wert des Datenfeldes [58: 'Interaktion mit Personen im direkten Kontakt'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GAINTERAKTION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GAKONTAKTPFLEGE/@value) and not(xs:string(GAKONTAKTPFLEGE/@value) = ('0','1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20050"/>
					<das:rule_text value="Der Wert des Datenfeldes [59: 'Kontaktpflege zu Personen außerhalb des direkten Umfeldes'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GAKONTAKTPFLEGE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUS/@value) and not(xs:string(DEKUBITUS/@value) = ('0','1','2'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20051"/>
					<das:rule_text value="Der Wert des Datenfeldes [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1 oder 2"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUSSTADIUM/@value) and not(xs:string(DEKUBITUSSTADIUM/@value) = ('1','2','3','4','9'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20052"/>
					<das:rule_text value="Der Wert des Datenfeldes [61: 'Maximales Dekubitusstadium im Erhebungszeitraum'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 1, 2, 3, 4 oder 9"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUS1LOK/@value) and not(xs:string(DEKUBITUS1LOK/@value) = ('1','2','3','4'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20053"/>
					<das:rule_text value="Der Wert des Datenfeldes [64: 'Wo ist der Dekubitus 1 entstanden?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 1, 2, 3 oder 4"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUS2LOK/@value) and not(xs:string(DEKUBITUS2LOK/@value) = ('1','2','3','4'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20054"/>
					<das:rule_text value="Der Wert des Datenfeldes [67: 'Wo ist der Dekubitus 2 entstanden?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 1, 2, 3 oder 4"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in KOERPERGEWICHTDOKU/@value satisfies not(xs:string($v) = ('0','1','2','3','4','5'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20055"/>
					<das:rule_text value="Mindestens eine Angabe im Datenfeld [70: 'Welche der aufgeführten Punkte trafen laut Pflegedokumentation für den Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung zu?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2, 3, 4 oder 5"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHTDOKU"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(STURZ/@value) and not(xs:string(STURZ/@value) = ('0','1','2'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20056"/>
					<das:rule_text value="Der Wert des Datenfeldes [71: 'Ist der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in der Einrichtung gestürzt?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1 oder 2"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="STURZ"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in STURZFOLGEN/@value satisfies not(xs:string($v) = ('0','1','2','3','4'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20057"/>
					<das:rule_text value="Mindestens eine Angabe im Datenfeld [72: 'Welche Sturzfolgen sind aufgetreten?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2, 3 oder 4"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="STURZFOLGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GURT/@value) and not(xs:string(GURT/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20058"/>
					<das:rule_text value="Der Wert des Datenfeldes [73: 'Wurden bei dem Bewohner bzw. der Bewohnerin in den vergangenen 4 Wochen Gurte angewendet?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GURT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SEITENTEILE/@value) and not(xs:string(SEITENTEILE/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20060"/>
					<das:rule_text value="Der Wert des Datenfeldes [74: 'Wurden bei dem Bewohner bzw. der Bewohnerin in den vergangenen 4 Wochen Bettseitenteile angewendet?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SEITENTEILE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SCHMERZEN/@value) and not(xs:string(SCHMERZEN/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20062"/>
					<das:rule_text value="Der Wert des Datenfeldes [75: 'Liegen bei dem Bewohner bzw. der Bewohnerin Anzeichen für länger andauernde Schmerzen vor (z.B. Äußerungen des Bewohners bzw. der Bewohnerin oder Einnahme von Analgetika)?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SCHMERZFREI/@value) and not(xs:string(SCHMERZFREI/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20063"/>
					<das:rule_text value="Der Wert des Datenfeldes [76: 'Ist der Bewohner bzw. die Bewohnerin durch eine medikamentöse Schmerzbehandlung schmerzfrei?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZFREI"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SCHMERZEINSCH/@value) and not(xs:string(SCHMERZEINSCH/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20064"/>
					<das:rule_text value="Der Wert des Datenfeldes [77: 'Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in SCHMERZEINSCHINFO/@value satisfies not(xs:string($v) = ('0','1','2','3','4'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20065"/>
					<das:rule_text value="Mindestens eine Angabe im Datenfeld [79: 'Welche Informationen liegen über die Ergebnisse dieser Schmerzeinschätzung vor?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2, 3 oder 4"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCHINFO"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(NEUEINZUG/@value) and not(xs:string(NEUEINZUG/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20066"/>
					<das:rule_text value="Der Wert des Datenfeldes [80: 'Ist der Bewohner bzw. die Bewohnerin nach der letzten Ergebniserfassung neu in die Einrichtung eingezogen?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="NEUEINZUG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGNACHKZP/@value) and not(xs:string(EINZUGNACHKZP/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20067"/>
					<das:rule_text value="Der Wert des Datenfeldes [81: 'Erfolgte der Einzug direkt im Anschluss an einen Kurzzeit- bzw. Verhinderungspflegeaufenthalt in der Einrichtung (ohne zeitliche Lücke)?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGNACHKZP"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGKHBEHANDLUNG/@value) and not(xs:string(EINZUGKHBEHANDLUNG/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20068"/>
					<das:rule_text value="Der Wert des Datenfeldes [83: 'Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGGESPR/@value) and not(xs:string(EINZUGGESPR/@value) = ('1','2','3'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20069"/>
					<das:rule_text value="Der Wert des Datenfeldes [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 1, 2 oder 3"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPR"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in EINZUGGESPRTEILNEHMER/@value satisfies not(xs:string($v) = ('0','1','2','3','4'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20070"/>
					<das:rule_text value="Mindestens eine Angabe im Datenfeld [88: 'Wer hat an dem Integrationsgespräch teilgenommen?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0, 1, 2, 3 oder 4"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRTEILNEHMER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGGESPRDOKU/@value) and not(xs:string(EINZUGGESPRDOKU/@value) = ('0','1'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20071"/>
					<das:rule_text value="Der Wert des Datenfeldes [89: 'Wurden die Ergebnisse dieses Gespräches dokumentiert?'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte = 0 oder 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRDOKU"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(WOHNBEREICH/@value) and not(matches(WOHNBEREICH/@value, '^WB_([1-9]|[1-9][0-9])$'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="20073"/>
					<das:rule_text value="Der Wert des Datenfeldes [2: 'Wohnbereich'] entspricht keinem der für dieses Datenfeld gültigen Schlüsselwerte: 'WB_' + [1 bis 99]"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="WOHNBEREICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(IDBEWOHNER/@value) and (not(IDBEWOHNER/@value castable as xs:int) or string-length(xs:string(IDBEWOHNER/@value)) &gt; 6)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30001"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [1: 'Bewohnerbezogene Nummer'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 6"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="IDBEWOHNER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(ERHEBUNGSDATUM/@value) and (not(ERHEBUNGSDATUM/@value castable as xs:date) or string-length(xs:string(ERHEBUNGSDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30002"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [3: 'Datum der Ergebniserfassung'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGSDATUM/@value) and (not(EINZUGSDATUM/@value castable as xs:date) or string-length(xs:string(EINZUGSDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30003"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GEBURTSMONAT/@value) and (not(GEBURTSMONAT/@value castable as xs:int) or string-length(xs:string(GEBURTSMONAT/@value)) &gt; 2)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30004"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [5: 'Geburtsmonat'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 2"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GEBURTSMONAT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GEBURTSJAHR/@value) and (not(GEBURTSJAHR/@value castable as xs:gYear) or string-length(xs:string(GEBURTSJAHR/@value)) &gt; 4)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30005"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [6: 'Geburtsjahr'] entspricht nicht dem vorgegebenen Datentyp: xs:gYear mit einer Feldlänge von 4"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GEBURTSJAHR"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(PFLEGEGRAD/@value) and (not(PFLEGEGRAD/@value castable as xs:int) or string-length(xs:string(PFLEGEGRAD/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30007"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [7: 'Ist ein Pflegegrad vorhanden?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="PFLEGEGRAD"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(APOPLEX/@value) and (not(APOPLEX/@value castable as xs:int) or string-length(xs:string(APOPLEX/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30008"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [8: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Apoplex gekommen?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="APOPLEX"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(APOPLEXDATUM/@value) and (not(APOPLEXDATUM/@value castable as xs:date) or string-length(xs:string(APOPLEXDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30009"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [9: 'Datum des Apoplex'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="APOPLEXDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(FRAKTUR/@value) and (not(FRAKTUR/@value castable as xs:int) or string-length(xs:string(FRAKTUR/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30010"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [10: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Fraktur gekommen?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="FRAKTUR"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(FRAKTURDATUM/@value) and (not(FRAKTURDATUM/@value castable as xs:date) or string-length(xs:string(FRAKTURDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30011"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [11: 'Datum der Fraktur'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="FRAKTURDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(HERZINFARKT/@value) and (not(HERZINFARKT/@value castable as xs:int) or string-length(xs:string(HERZINFARKT/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30012"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [12: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Herzinfarkt gekommen?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="HERZINFARKT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(HERZINFARKTDATUM/@value) and (not(HERZINFARKTDATUM/@value castable as xs:date) or string-length(xs:string(HERZINFARKTDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30013"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [13: 'Datum des Herzinfarkts'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="HERZINFARKTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(AMPUTATION/@value) and (not(AMPUTATION/@value castable as xs:int) or string-length(xs:string(AMPUTATION/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30014"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [14: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Amputation gekommen?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="AMPUTATION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(AMPUTATIONDATUM/@value) and (not(AMPUTATIONDATUM/@value castable as xs:date) or string-length(xs:string(AMPUTATIONDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30015"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [15: 'Datum der Amputation'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="AMPUTATIONDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KHBEHANDLUNG/@value) and (not(KHBEHANDLUNG/@value castable as xs:int) or string-length(xs:string(KHBEHANDLUNG/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30016"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KHBEGINNDATUM/@value) and (not(KHBEGINNDATUM/@value castable as xs:date) or string-length(xs:string(KHBEGINNDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30017"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHBEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KHENDEDATUM/@value) and (not(KHENDEDATUM/@value castable as xs:date) or string-length(xs:string(KHENDEDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30018"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(BEWUSSTSEINSZUSTAND/@value) and (not(BEWUSSTSEINSZUSTAND/@value castable as xs:int) or string-length(xs:string(BEWUSSTSEINSZUSTAND/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30022"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in DIAGNOSEN/@value satisfies (not($v castable as xs:int) or string-length(xs:string($v)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30023"/>
					<das:rule_text value="Der Datentyp von mindestens einem der Datenfelder unter [20: 'Ärztliche Diagnosen für den Bewohner bzw. die Bewohnerin'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DIAGNOSEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(MOBILPOSWECHSEL/@value) and (not(MOBILPOSWECHSEL/@value castable as xs:int) or string-length(xs:string(MOBILPOSWECHSEL/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30024"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [21: 'Positionswechsel im Bett'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILPOSWECHSEL"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(MOBILSITZPOSITION/@value) and (not(MOBILSITZPOSITION/@value castable as xs:int) or string-length(xs:string(MOBILSITZPOSITION/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30025"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [22: 'Halten einer stabilen Sitzposition'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILSITZPOSITION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(MOBILUMSETZEN/@value) and (not(MOBILUMSETZEN/@value castable as xs:int) or string-length(xs:string(MOBILUMSETZEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30026"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [23: 'Sich Umsetzen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILUMSETZEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(MOBILFORTBEWEGUNG/@value) and (not(MOBILFORTBEWEGUNG/@value castable as xs:int) or string-length(xs:string(MOBILFORTBEWEGUNG/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30027"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [24: 'Fortbewegen innerhalb des Wohnbereichs'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILFORTBEWEGUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(MOBILTREPPENSTEIGEN/@value) and (not(MOBILTREPPENSTEIGEN/@value castable as xs:int) or string-length(xs:string(MOBILTREPPENSTEIGEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30028"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [25: 'Treppensteigen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="MOBILTREPPENSTEIGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFERKENNEN/@value) and (not(KKFERKENNEN/@value castable as xs:int) or string-length(xs:string(KKFERKENNEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30029"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [26: 'Erkennen von Personen aus dem näheren Umfeld'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFERKENNEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFORIENTOERTLICH/@value) and (not(KKFORIENTOERTLICH/@value castable as xs:int) or string-length(xs:string(KKFORIENTOERTLICH/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30030"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [27: 'Örtliche Orientierung'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFORIENTOERTLICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFORIENTZEITLICH/@value) and (not(KKFORIENTZEITLICH/@value castable as xs:int) or string-length(xs:string(KKFORIENTZEITLICH/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30031"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [28: 'Zeitliche Orientierung'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFORIENTZEITLICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFERINNERN/@value) and (not(KKFERINNERN/@value castable as xs:int) or string-length(xs:string(KKFERINNERN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30032"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [29: 'Sich Erinnern'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFERINNERN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFHANDLUNGEN/@value) and (not(KKFHANDLUNGEN/@value castable as xs:int) or string-length(xs:string(KKFHANDLUNGEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30033"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [30: 'Steuern von mehrschrittigen Alltagshandlungen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFHANDLUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFENTSCHEIDUNGEN/@value) and (not(KKFENTSCHEIDUNGEN/@value castable as xs:int) or string-length(xs:string(KKFENTSCHEIDUNGEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30034"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [31: 'Treffen von Entscheidungen im Alltagsleben'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFENTSCHEIDUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFVERSTEHENINFO/@value) and (not(KKFVERSTEHENINFO/@value castable as xs:int) or string-length(xs:string(KKFVERSTEHENINFO/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30035"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [32: 'Verstehen von Sachverhalten und Informationen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFVERSTEHENINFO"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFGEFAHRERKENNEN/@value) and (not(KKFGEFAHRERKENNEN/@value castable as xs:int) or string-length(xs:string(KKFGEFAHRERKENNEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30036"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [33: 'Erkennen von Risiken und Gefahren'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFGEFAHRERKENNEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFMITTEILEN/@value) and (not(KKFMITTEILEN/@value castable as xs:int) or string-length(xs:string(KKFMITTEILEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30037"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [34: 'Mitteilen von elementaren Bedürfnissen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFMITTEILEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFVERSTEHENAUF/@value) and (not(KKFVERSTEHENAUF/@value castable as xs:int) or string-length(xs:string(KKFVERSTEHENAUF/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30038"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [35: 'Verstehen von Aufforderungen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFVERSTEHENAUF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KKFBETEILIGUNG/@value) and (not(KKFBETEILIGUNG/@value castable as xs:int) or string-length(xs:string(KKFBETEILIGUNG/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30039"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [36: 'Beteiligung an einem Gespräch'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KKFBETEILIGUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVERNAEHRUNG/@value) and (not(SVERNAEHRUNG/@value castable as xs:int) or string-length(xs:string(SVERNAEHRUNG/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30040"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [37: 'Erfolgt die Ernährung des Bewohners bzw. der Bewohnerin parenteral oder über eine Sonde?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVERNAEHRUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVFREMDHILFE/@value) and (not(SVFREMDHILFE/@value castable as xs:int) or string-length(xs:string(SVFREMDHILFE/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30041"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [38: 'Erfolgt die Bedienung selbständig oder mit Fremdhilfe?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVFREMDHILFE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVERNAEHRUNGUMFANG/@value) and (not(SVERNAEHRUNGUMFANG/@value castable as xs:int) or string-length(xs:string(SVERNAEHRUNGUMFANG/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30042"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [39: 'In welchem Umfang erfolgt eine künstliche Ernährung?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVERNAEHRUNGUMFANG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVHARNKONTINENZ/@value) and (not(SVHARNKONTINENZ/@value castable as xs:int) or string-length(xs:string(SVHARNKONTINENZ/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30043"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [40: 'Blasenkontrolle/Harnkontinenz'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVHARNKONTINENZ"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVSTUHLKONTINENZ/@value) and (not(SVSTUHLKONTINENZ/@value castable as xs:int) or string-length(xs:string(SVSTUHLKONTINENZ/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30044"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [41: 'Darmkontrolle/Stuhlkontinenz'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVSTUHLKONTINENZ"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVOBERKOERPER/@value) and (not(SVOBERKOERPER/@value castable as xs:int) or string-length(xs:string(SVOBERKOERPER/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30045"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [42: 'Waschen des vorderen Oberkörpers'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVOBERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVKOPF/@value) and (not(SVKOPF/@value castable as xs:int) or string-length(xs:string(SVKOPF/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30046"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [43: 'Körperpflege im Bereich des Kopfes'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVKOPF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVINTIMBEREICH/@value) and (not(SVINTIMBEREICH/@value castable as xs:int) or string-length(xs:string(SVINTIMBEREICH/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30047"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [44: 'Waschen des Intimbereichs'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVINTIMBEREICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVDUSCHENBADEN/@value) and (not(SVDUSCHENBADEN/@value castable as xs:int) or string-length(xs:string(SVDUSCHENBADEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30048"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [45: 'Duschen oder Baden einschließlich Waschen der Haare'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVDUSCHENBADEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVANAUSOBERKOERPER/@value) and (not(SVANAUSOBERKOERPER/@value castable as xs:int) or string-length(xs:string(SVANAUSOBERKOERPER/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30049"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [46: 'An- und Auskleiden des Oberkörpers'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVANAUSOBERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVANAUSUNTERKOERPER/@value) and (not(SVANAUSUNTERKOERPER/@value castable as xs:int) or string-length(xs:string(SVANAUSUNTERKOERPER/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30050"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [47: 'An- und Auskleiden des Unterkörpers'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVANAUSUNTERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVNAHRUNGZUBEREITEN/@value) and (not(SVNAHRUNGZUBEREITEN/@value castable as xs:int) or string-length(xs:string(SVNAHRUNGZUBEREITEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30051"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [48: 'Mundgerechtes Zubereiten der Nahrung, Eingießen von Getränken'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVNAHRUNGZUBEREITEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVESSEN/@value) and (not(SVESSEN/@value castable as xs:int) or string-length(xs:string(SVESSEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30052"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [49: 'Essen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVESSEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVTRINKEN/@value) and (not(SVTRINKEN/@value castable as xs:int) or string-length(xs:string(SVTRINKEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30053"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [50: 'Trinken'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVTRINKEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVTOILETTE/@value) and (not(SVTOILETTE/@value castable as xs:int) or string-length(xs:string(SVTOILETTE/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30054"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [51: 'Benutzen einer Toilette oder eines Toilettenstuhls'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVTOILETTE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVHARNKONTINENZBEW/@value) and (not(SVHARNKONTINENZBEW/@value castable as xs:int) or string-length(xs:string(SVHARNKONTINENZBEW/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30055"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [52: 'Bewältigung der Folgen einer Harninkontinenz (auch Umgang mit Dauerkatheter/Urostoma)'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVHARNKONTINENZBEW"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SVSTUHLKONTINENZBEW/@value) and (not(SVSTUHLKONTINENZBEW/@value castable as xs:int) or string-length(xs:string(SVSTUHLKONTINENZBEW/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30056"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [53: 'Bewältigung der Folgen einer Stuhlinkontinenz (auch Umgang mit Stoma)'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVSTUHLKONTINENZBEW"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GATAGESABLAUF/@value) and (not(GATAGESABLAUF/@value castable as xs:int) or string-length(xs:string(GATAGESABLAUF/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30057"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [54: 'Tagesablauf gestalten und an Veränderungen anpassen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GATAGESABLAUF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GARUHENSCHLAFEN/@value) and (not(GARUHENSCHLAFEN/@value castable as xs:int) or string-length(xs:string(GARUHENSCHLAFEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30058"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [55: 'Ruhen und Schlafen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GARUHENSCHLAFEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GABESCHAEFTIGEN/@value) and (not(GABESCHAEFTIGEN/@value castable as xs:int) or string-length(xs:string(GABESCHAEFTIGEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30059"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [56: 'Sich beschäftigen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GABESCHAEFTIGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GAPLANUNGEN/@value) and (not(GAPLANUNGEN/@value castable as xs:int) or string-length(xs:string(GAPLANUNGEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30060"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [57: 'In die Zukunft gerichtete Planungen vornehmen'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GAPLANUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GAINTERAKTION/@value) and (not(GAINTERAKTION/@value castable as xs:int) or string-length(xs:string(GAINTERAKTION/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30061"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [58: 'Interaktion mit Personen im direkten Kontakt'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GAINTERAKTION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GAKONTAKTPFLEGE/@value) and (not(GAKONTAKTPFLEGE/@value castable as xs:int) or string-length(xs:string(GAKONTAKTPFLEGE/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30062"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [59: 'Kontaktpflege zu Personen außerhalb des direkten Umfeldes'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GAKONTAKTPFLEGE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUS/@value) and (not(DEKUBITUS/@value castable as xs:int) or string-length(xs:string(DEKUBITUS/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30063"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUSSTADIUM/@value) and (not(DEKUBITUSSTADIUM/@value castable as xs:int) or string-length(xs:string(DEKUBITUSSTADIUM/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30064"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [61: 'Maximales Dekubitusstadium im Erhebungszeitraum'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUS1BEGINNDATUM/@value) and (not(DEKUBITUS1BEGINNDATUM/@value castable as xs:date) or string-length(xs:string(DEKUBITUS1BEGINNDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30065"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [62: 'Datum: Beginn Dekubitus 1'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUS1ENDEDATUM/@value) and (not(DEKUBITUS1ENDEDATUM/@value castable as xs:date) or string-length(xs:string(DEKUBITUS1ENDEDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30066"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUS1LOK/@value) and (not(DEKUBITUS1LOK/@value castable as xs:int) or string-length(xs:string(DEKUBITUS1LOK/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30067"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [64: 'Wo ist der Dekubitus 1 entstanden?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUS2BEGINNDATUM/@value) and (not(DEKUBITUS2BEGINNDATUM/@value castable as xs:date) or string-length(xs:string(DEKUBITUS2BEGINNDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30068"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [65: 'Datum: Beginn Dekubitus 2'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2BEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUS2ENDEDATUM/@value) and (not(DEKUBITUS2ENDEDATUM/@value castable as xs:date) or string-length(xs:string(DEKUBITUS2ENDEDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30069"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(DEKUBITUS2LOK/@value) and (not(DEKUBITUS2LOK/@value castable as xs:int) or string-length(xs:string(DEKUBITUS2LOK/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30070"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [67: 'Wo ist der Dekubitus 2 entstanden?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KOERPERGEWICHT/@value) and (not(KOERPERGEWICHT/@value castable as xs:decimal) or string-length(xs:string(KOERPERGEWICHT/@value)) &gt; 6)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30072"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [68: 'Aktuelles Körpergewicht in kg'] entspricht nicht dem vorgegebenen Datentyp: xs:decimal mit einer Feldlänge von 5"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KOERPERGEWICHTDATUM/@value) and (not(KOERPERGEWICHTDATUM/@value castable as xs:date) or string-length(xs:string(KOERPERGEWICHTDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30073"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [69: 'Datum: Dokumentation des Körpergewichts'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in KOERPERGEWICHTDOKU/@value satisfies (not($v castable as xs:int) or string-length(xs:string($v)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30074"/>
					<das:rule_text value="Der Datentyp von mindestens einem der Datenfelder unter [70: 'Welche der aufgeführten Punkte trafen laut Pflegedokumentation für den Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung zu?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHTDOKU"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(STURZ/@value) and (not(STURZ/@value castable as xs:int) or string-length(xs:string(STURZ/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30075"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [71: 'Ist der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in der Einrichtung gestürzt?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="STURZ"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in STURZFOLGEN/@value satisfies (not($v castable as xs:int) or string-length(xs:string($v)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30076"/>
					<das:rule_text value="Der Datentyp von mindestens einem der Datenfelder unter [72: 'Welche Sturzfolgen sind aufgetreten?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="STURZFOLGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(GURT/@value) and (not(GURT/@value castable as xs:int) or string-length(xs:string(GURT/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30077"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [73: 'Wurden bei dem Bewohner bzw. der Bewohnerin in den vergangenen 4 Wochen Gurte angewendet?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GURT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SEITENTEILE/@value) and (not(SEITENTEILE/@value castable as xs:int) or string-length(xs:string(SEITENTEILE/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30079"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [74: 'Wurden bei dem Bewohner bzw. der Bewohnerin in den vergangenen 4 Wochen Bettseitenteile angewendet?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SEITENTEILE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SCHMERZEN/@value) and (not(SCHMERZEN/@value castable as xs:int) or string-length(xs:string(SCHMERZEN/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30081"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [75: 'Liegen bei dem Bewohner bzw. der Bewohnerin Anzeichen für länger andauernde Schmerzen vor (z.B. Äußerungen des Bewohners bzw. der Bewohnerin oder Einnahme von Analgetika)?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SCHMERZFREI/@value) and (not(SCHMERZFREI/@value castable as xs:int) or string-length(xs:string(SCHMERZFREI/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30082"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [76: 'Ist der Bewohner bzw. die Bewohnerin durch eine medikamentöse Schmerzbehandlung schmerzfrei?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZFREI"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SCHMERZEINSCH/@value) and (not(SCHMERZEINSCH/@value castable as xs:int) or string-length(xs:string(SCHMERZEINSCH/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30083"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [77: 'Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(SCHMERZEINSCHDATUM/@value) and (not(SCHMERZEINSCHDATUM/@value castable as xs:date) or string-length(xs:string(SCHMERZEINSCHDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30084"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [78: 'Datum: Dokumentation der Schmerzeinschätzung'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCHDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in SCHMERZEINSCHINFO/@value satisfies (not($v castable as xs:int) or string-length(xs:string($v)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30085"/>
					<das:rule_text value="Der Datentyp von mindestens einem der Datenfelder unter [79: 'Welche Informationen liegen über die Ergebnisse dieser Schmerzeinschätzung vor?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCHINFO"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(NEUEINZUG/@value) and (not(NEUEINZUG/@value castable as xs:int) or string-length(xs:string(NEUEINZUG/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30086"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [80: 'Ist der Bewohner bzw. die Bewohnerin nach der letzten Ergebniserfassung neu in die Einrichtung eingezogen?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="NEUEINZUG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGNACHKZP/@value) and (not(EINZUGNACHKZP/@value castable as xs:int) or string-length(xs:string(EINZUGNACHKZP/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30087"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [81: 'Erfolgte der Einzug direkt im Anschluss an einen Kurzzeit- bzw. Verhinderungspflegeaufenthalt in der Einrichtung (ohne zeitliche Lücke)?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGNACHKZP"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGNACHKZPDATUM/@value) and (not(EINZUGNACHKZPDATUM/@value castable as xs:date) or string-length(xs:string(EINZUGNACHKZPDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30088"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [82: 'Datum: Beginn des Kurzzeit- bzw. Verhinderungspflegeaufenthalts'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGNACHKZPDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGKHBEHANDLUNG/@value) and (not(EINZUGKHBEHANDLUNG/@value castable as xs:int) or string-length(xs:string(EINZUGKHBEHANDLUNG/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30089"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [83: 'Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGKHBEGINNDATUM/@value) and (not(EINZUGKHBEGINNDATUM/@value castable as xs:date) or string-length(xs:string(EINZUGKHBEGINNDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30090"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGKHENDEDATUM/@value) and (not(EINZUGKHENDEDATUM/@value castable as xs:date) or string-length(xs:string(EINZUGKHENDEDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30091"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGGESPR/@value) and (not(EINZUGGESPR/@value castable as xs:int) or string-length(xs:string(EINZUGGESPR/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30092"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPR"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGGESPRDATUM/@value) and (not(EINZUGGESPRDATUM/@value castable as xs:date) or string-length(xs:string(EINZUGGESPRDATUM/@value)) != 10)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30093"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [87: 'Datum des Integrationsgesprächs'] entspricht nicht dem vorgegebenen Datentyp: xs:date mit einer Feldlänge von 10"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in EINZUGGESPRTEILNEHMER/@value satisfies (not($v castable as xs:int) or string-length(xs:string($v)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30094"/>
					<das:rule_text value="Der Datentyp von mindestens einem der Datenfelder unter [88: 'Wer hat an dem Integrationsgespräch teilgenommen?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRTEILNEHMER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(EINZUGGESPRDOKU/@value) and (not(EINZUGGESPRDOKU/@value castable as xs:int) or string-length(xs:string(EINZUGGESPRDOKU/@value)) &gt; 1)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30095"/>
					<das:rule_text value="Der Datentyp des Datenfeldes [89: 'Wurden die Ergebnisse dieses Gespräches dokumentiert?'] entspricht nicht dem vorgegebenen Datentyp: xs:int mit einer Feldlänge von 1"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRDOKU"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(matches(IDBEWOHNER/@value, '[0-9]{6}'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="30099"/>
					<das:rule_text value="Der Wert des Datenfeldes [1: 'Bewohnerbezogene Nummer'] entspricht nicht dem vorgegebenen Format: [0-9]{6}"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="IDBEWOHNER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(xs:int(xs:string(GEBURTSJAHR/@value)) &lt; 1900 or xs:int(xs:string(GEBURTSJAHR/@value)) &gt; xs:int(xs:string(year-from-date(current-date())))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="40001"/>
					<das:rule_text value="Der Wert des Datenfeldes [6: 'Geburtsjahr'] liegt nicht im gültigen Wertebereich: &gt;= 1900 und &lt;= dem aktuellen Jahr"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="GEBURTSJAHR"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(KOERPERGEWICHT/@value &lt; 0 or KOERPERGEWICHT/@value &gt; 500) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="40005"/>
					<das:rule_text value="Der Wert des Datenfeldes [68: 'Aktuelles Körpergewicht in kg'] liegt nicht im gültigen Wertebereich: &gt;= 0 und &lt;= 500"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHT"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50001"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50002"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(APOPLEXDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50003"/>
					<das:rule_text value="Das Datum im Datenfeld [9: 'Datum des Apoplex'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="APOPLEXDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(FRAKTURDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50004"/>
					<das:rule_text value="Das Datum im Datenfeld [11: 'Datum der Fraktur'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="FRAKTURDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(HERZINFARKTDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50005"/>
					<das:rule_text value="Das Datum im Datenfeld [13: 'Datum des Herzinfarkts'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="HERZINFARKTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(AMPUTATIONDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50006"/>
					<das:rule_text value="Das Datum im Datenfeld [15: 'Datum der Amputation'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="AMPUTATIONDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(KHBEGINNDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50007"/>
					<das:rule_text value="Das Datum im Datenfeld [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHBEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(KHENDEDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50008"/>
					<das:rule_text value="Das Datum im Datenfeld [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS1BEGINNDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50009"/>
					<das:rule_text value="Das Datum im Datenfeld [62: 'Datum: Beginn Dekubitus 1'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS1ENDEDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50010"/>
					<das:rule_text value="Das Datum im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS2BEGINNDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50011"/>
					<das:rule_text value="Das Datum im Datenfeld [65: 'Datum: Beginn Dekubitus 2'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2BEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS2ENDEDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50012"/>
					<das:rule_text value="Das Datum im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(KOERPERGEWICHTDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50013"/>
					<das:rule_text value="Das Datum im Datenfeld [69: 'Datum: Dokumentation des Körpergewichts'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SCHMERZEINSCHDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50014"/>
					<das:rule_text value="Das Datum im Datenfeld [78: 'Datum: Dokumentation der Schmerzeinschätzung'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCHDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGNACHKZPDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50015"/>
					<das:rule_text value="Das Datum im Datenfeld [82: 'Datum: Beginn des Kurzzeit- bzw. Verhinderungspflegeaufenthalts'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGNACHKZPDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGKHBEGINNDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50016"/>
					<das:rule_text value="Das Datum im Datenfeld [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGKHENDEDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50017"/>
					<das:rule_text value="Das Datum im Datenfeld [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGGESPRDATUM/@value &gt; current-date()) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50018"/>
					<das:rule_text value="Das Datum im Datenfeld [87: 'Datum des Integrationsgesprächs'] liegt in der Zukunft"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; EINZUGSDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50019"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGSDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; APOPLEXDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50020"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [9: 'Datum des Apoplex']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="APOPLEXDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; FRAKTURDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50021"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [11: 'Datum der Fraktur']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="ERHEBUNGSDATUM"/>
						<das:field value="FRAKTURDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; HERZINFARKTDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50022"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [13: 'Datum des Herzinfarkts']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="ERHEBUNGSDATUM"/>
						<das:field value="HERZINFARKTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; AMPUTATIONDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50023"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [15: 'Datum der Amputation']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="AMPUTATIONDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; KHBEGINNDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50024"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="ERHEBUNGSDATUM"/>
						<das:field value="KHBEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; KHENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50025"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="ERHEBUNGSDATUM"/>
						<das:field value="KHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; DEKUBITUS1BEGINNDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50026"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [62: 'Datum: Beginn Dekubitus 1']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; DEKUBITUS1ENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50027"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; DEKUBITUS2BEGINNDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50028"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [65: 'Datum: Beginn Dekubitus 2']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2BEGINNDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; DEKUBITUS2ENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50029"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; KOERPERGEWICHTDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50030"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [69: 'Datum: Dokumentation des Körpergewichts']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="ERHEBUNGSDATUM"/>
						<das:field value="KOERPERGEWICHTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; SCHMERZEINSCHDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50031"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [78: 'Datum: Dokumentation der Schmerzeinschätzung']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="ERHEBUNGSDATUM"/>
						<das:field value="SCHMERZEINSCHDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; EINZUGNACHKZPDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50032"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [82: 'Datum: Beginn des Kurzzeit- bzw. Verhinderungspflegeaufenthalts']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGNACHKZPDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; EINZUGKHBEGINNDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50033"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEGINNDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; EINZUGKHENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50034"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHENDEDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(ERHEBUNGSDATUM/@value &lt; EINZUGGESPRDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50035"/>
					<das:rule_text value="Das Datum im Datenfeld [3: 'Datum der Ergebniserfassung'] liegt vor dem Datum im Datenfeld [87: 'Datum des Integrationsgesprächs']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRDATUM"/>
						<das:field value="ERHEBUNGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; APOPLEXDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50036"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [9: 'Datum des Apoplex']. Es sind ausschließlich Ereignisse anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin auftraten"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="APOPLEXDATUM"/>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; FRAKTURDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50037"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [11: 'Datum der Fraktur']. Es sind ausschließlich Ereignisse anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin auftraten"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGSDATUM"/>
						<das:field value="FRAKTURDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; HERZINFARKTDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50038"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [13: 'Datum des Herzinfarkts']. Es sind ausschließlich Ereignisse anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin auftraten"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGSDATUM"/>
						<das:field value="HERZINFARKTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; AMPUTATIONDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50039"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [15: 'Datum der Amputation']. Es sind ausschließlich Ereignisse anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin auftraten"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="AMPUTATIONDATUM"/>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; KHBEGINNDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50040"/>
					<das:rule_text value="Hinweis: Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)']. Diese Angabe ist nur dann plausibel, wenn sich der Bewohner oder die Bewohnerin zum Beginn der vollstationären Langzeitpflege im Krankenhaus befand"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="EINZUGSDATUM"/>
						<das:field value="KHBEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; KHENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50041"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)']. Es sind ausschließlich Krankenhausaufenthalte anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin endeten"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGSDATUM"/>
						<das:field value="KHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; DEKUBITUS1ENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50042"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)']. Es sind ausschließlich Dekubitus anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin bestanden oder ggf. noch bestehen"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; DEKUBITUS2ENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50043"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)']. Es sind ausschließlich Dekubitus anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin bestanden oder ggf. noch bestehen"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; KOERPERGEWICHTDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50044"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [69: 'Datum: Dokumentation des Körpergewichts']. Es sind ausschließlich Werte anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin erfasst wurden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGSDATUM"/>
						<das:field value="KOERPERGEWICHTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; SCHMERZEINSCHDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50045"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [78: 'Datum: Dokumentation der Schmerzeinschätzung']. Es sind ausschließlich Werte anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin erfasst wurden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGSDATUM"/>
						<das:field value="SCHMERZEINSCHDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; EINZUGKHBEGINNDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50046"/>
					<das:rule_text value="Hinweis: Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug']. Diese Angabe ist nur dann plausibel, wenn sich der Bewohner oder die Bewohnerin zum Beginn der vollstationären Langzeitpflege im Krankenhaus befand"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEGINNDATUM"/>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; EINZUGKHENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50047"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug']. Es sind ausschließlich Krankenhausaufenthalte anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin endeten"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHENDEDATUM"/>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &gt; EINZUGGESPRDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50048"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt nach dem Datum im Datenfeld [87: 'Datum des Integrationsgesprächs']. Es sind ausschließlich Integrationsgespräche anzugeben, die nach dem Beginn der vollstationären Langzeitpflege des Bewohners oder der Bewohnerin geführt wurden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRDATUM"/>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(KHENDEDATUM/@value &lt; KHBEGINNDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50049"/>
					<das:rule_text value="Das Datum im Datenfeld [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] liegt vor dem Datum im Datenfeld [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHBEGINNDATUM"/>
						<das:field value="KHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS1ENDEDATUM/@value &lt; DEKUBITUS1BEGINNDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50050"/>
					<das:rule_text value="Das Datum im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)'] liegt vor dem Datum im Datenfeld [62: 'Datum: Beginn Dekubitus 1']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS2ENDEDATUM/@value &lt; DEKUBITUS2BEGINNDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50051"/>
					<das:rule_text value="Das Datum im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)'] liegt vor dem Datum im Datenfeld [65: 'Datum: Beginn Dekubitus 2']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2BEGINNDATUM"/>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGKHENDEDATUM/@value &lt; EINZUGKHBEGINNDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50052"/>
					<das:rule_text value="Das Datum im Datenfeld [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug'] liegt vor dem Datum im Datenfeld [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEGINNDATUM"/>
						<das:field value="EINZUGKHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGSDATUM/@value &lt; EINZUGNACHKZPDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50053"/>
					<das:rule_text value="Das Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)'] liegt vor dem Datum im Datenfeld [82: 'Datum: Beginn des Kurzzeit- bzw. Verhinderungspflegeaufenthalts']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGNACHKZPDATUM"/>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(KOERPERGEWICHTDATUM/@value &gt; KHBEGINNDATUM/@value and KOERPERGEWICHTDATUM/@value &lt; KHENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50054"/>
					<das:rule_text value="Hinweis: Das Datum im Datenfeld [69: 'Datum: Dokumentation des Körpergewichts'] liegt laut den Datumsangaben in den Datenfeldern [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] und [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] genau im Zeitraum eines Krankenhausaufenthalts (exkl. Aufnahme- und Entlassungstag)"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="KHBEGINNDATUM"/>
						<das:field value="KHENDEDATUM"/>
						<das:field value="KOERPERGEWICHTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(KOERPERGEWICHTDATUM/@value &gt; EINZUGKHBEGINNDATUM/@value and KOERPERGEWICHTDATUM/@value &lt; EINZUGKHENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="50055"/>
					<das:rule_text value="Hinweis: Das Datum im Datenfeld [69: 'Datum: Dokumentation des Körpergewichts'] liegt laut den Datumsangaben in den Datenfeldern [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug'] und [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug'] genau im Zeitraum eines Krankenhausaufenthalts (exkl. Aufnahme- und Entlassungstag)"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEGINNDATUM"/>
						<das:field value="EINZUGKHENDEDATUM"/>
						<das:field value="KOERPERGEWICHTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(APOPLEX/@value != 1 and exists(APOPLEXDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60001"/>
					<das:rule_text value="Im Datenfeld [8: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Apoplex gekommen?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [9: 'Datum des Apoplex']. Im Datenfeld [9: 'Datum des Apoplex'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="APOPLEX"/>
						<das:field value="APOPLEXDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(APOPLEX/@value = 1 and not(exists(APOPLEXDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60002"/>
					<das:rule_text value="Im Datenfeld [8: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Apoplex gekommen?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [9: 'Datum des Apoplex']. Das Datenfeld [9: 'Datum des Apoplex'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="APOPLEX"/>
						<das:field value="APOPLEXDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(FRAKTUR/@value != 1 and exists(FRAKTURDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60003"/>
					<das:rule_text value="Im Datenfeld [10: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Fraktur gekommen?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [11: 'Datum der Fraktur']. Im Datenfeld [11: 'Datum der Fraktur'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="FRAKTUR"/>
						<das:field value="FRAKTURDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(FRAKTUR/@value = 1 and not(exists(FRAKTURDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60004"/>
					<das:rule_text value="Im Datenfeld [10: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Fraktur gekommen?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [11: 'Datum der Fraktur']. Das Datenfeld [11: 'Datum der Fraktur'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="FRAKTUR"/>
						<das:field value="FRAKTURDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(HERZINFARKT/@value != 1 and exists(HERZINFARKTDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60005"/>
					<das:rule_text value="Im Datenfeld [12: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Herzinfarkt gekommen?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [13: 'Datum des Herzinfarkts']. Im Datenfeld [13: 'Datum des Herzinfarkts'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="HERZINFARKT"/>
						<das:field value="HERZINFARKTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(HERZINFARKT/@value = 1 and not(exists(HERZINFARKTDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60006"/>
					<das:rule_text value="Im Datenfeld [12: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Herzinfarkt gekommen?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [13: 'Datum des Herzinfarkts']. Das Datenfeld [13: 'Datum des Herzinfarkts'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="HERZINFARKT"/>
						<das:field value="HERZINFARKTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(AMPUTATION/@value != 1 and exists(AMPUTATIONDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60007"/>
					<das:rule_text value="Im Datenfeld [14: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Amputation gekommen?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [15: 'Datum der Amputation']. Im Datenfeld [15: 'Datum der Amputation'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="AMPUTATION"/>
						<das:field value="AMPUTATIONDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(AMPUTATION/@value = 1 and not(exists(AMPUTATIONDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60008"/>
					<das:rule_text value="Im Datenfeld [14: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Amputation gekommen?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [15: 'Datum der Amputation']. Das Datenfeld [15: 'Datum der Amputation'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="AMPUTATION"/>
						<das:field value="AMPUTATIONDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(KHBEHANDLUNG/@value = (1,2) and not(exists(KHBEGINNDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60009"/>
					<das:rule_text value="Im Datenfeld [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] ist [1 = ja, einmal] oder [2 = ja, mehrmals] angegeben, jedoch kein Wert im Datenfeld [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)']. Das Datenfeld [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHBEGINNDATUM"/>
						<das:field value="KHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(KHBEHANDLUNG/@value = (1,2) and not(exists(KHENDEDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60010"/>
					<das:rule_text value="Im Datenfeld [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] ist [1 = ja, einmal] oder [2 = ja, mehrmals] angegeben, jedoch kein Wert im Datenfeld [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)']. Das Datenfeld [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHBEHANDLUNG"/>
						<das:field value="KHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(KHBEHANDLUNG/@value = (1,2)) and exists(KHBEGINNDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60011"/>
					<das:rule_text value="Im Datenfeld [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)']. Im Datenfeld [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHBEGINNDATUM"/>
						<das:field value="KHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(KHBEHANDLUNG/@value = (1,2)) and exists(KHENDEDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60012"/>
					<das:rule_text value="Im Datenfeld [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)']. Im Datenfeld [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KHBEHANDLUNG"/>
						<das:field value="KHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SVERNAEHRUNG/@value != 1 and exists(SVFREMDHILFE/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60013"/>
					<das:rule_text value="Im Datenfeld [37: 'Erfolgt die Ernährung des Bewohners bzw. der Bewohnerin parenteral oder über eine Sonde?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [38: 'Erfolgt die Bedienung selbständig oder mit Fremdhilfe?']. Im Datenfeld [38: 'Erfolgt die Bedienung selbständig oder mit Fremdhilfe?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVERNAEHRUNG"/>
						<das:field value="SVFREMDHILFE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SVERNAEHRUNG/@value = 1 and not(exists(SVFREMDHILFE/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60014"/>
					<das:rule_text value="Im Datenfeld [37: 'Erfolgt die Ernährung des Bewohners bzw. der Bewohnerin parenteral oder über eine Sonde?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [38: 'Erfolgt die Bedienung selbständig oder mit Fremdhilfe?']. Das Datenfeld [38: 'Erfolgt die Bedienung selbständig oder mit Fremdhilfe?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVERNAEHRUNG"/>
						<das:field value="SVFREMDHILFE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SVHARNKONTINENZ/@value = (2,3,4) and not(exists(SVHARNKONTINENZBEW/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60015"/>
					<das:rule_text value="Im Datenfeld [40: 'Blasenkontrolle/Harnkontinenz'] ist [2 = überwiegend (mehrmals täglich) inkontinent, gesteuerte Blasenentleerung ist aber noch möglich], [3 = komplett inkontinent, gesteuerte Blasenentleerung ist nicht möglich] oder [4 = Bewohner bzw. Bewohnerin hat einen Dauerkatheter oder ein Urostoma] angegeben, jedoch kein Wert im Datenfeld [52: 'Bewältigung der Folgen einer Harninkontinenz (auch Umgang mit Dauerkatheter/Urostoma)']. Das Datenfeld [52: 'Bewältigung der Folgen einer Harninkontinenz (auch Umgang mit Dauerkatheter/Urostoma)'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVHARNKONTINENZ"/>
						<das:field value="SVHARNKONTINENZBEW"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(SVHARNKONTINENZ/@value = (2,3,4)) and exists(SVHARNKONTINENZBEW/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60016"/>
					<das:rule_text value="Im Datenfeld [40: 'Blasenkontrolle/Harnkontinenz'] ist [0 = ständig kontinent] oder [1 = überwiegend kontinent. Maximal 1x täglich inkontinent oder Tröpfchen-/Stressinkontinenz] angegeben und gleichzeitig ein Wert im Datenfeld [52: 'Bewältigung der Folgen einer Harninkontinenz (auch Umgang mit Dauerkatheter/Urostoma)']. Im Datenfeld [52: 'Bewältigung der Folgen einer Harninkontinenz (auch Umgang mit Dauerkatheter/Urostoma)'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVHARNKONTINENZ"/>
						<das:field value="SVHARNKONTINENZBEW"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SVSTUHLKONTINENZ/@value = (2,3,4) and not(exists(SVSTUHLKONTINENZBEW/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60017"/>
					<das:rule_text value="Im Datenfeld [41: 'Darmkontrolle/Stuhlkontinenz'] ist [2 = überwiegend inkontinent, selten gesteuerte Darmentleerung], [3 = komplett inkontinent, gesteuerte Darmentleerung ist nicht möglich] oder [4 = Bewohner bzw. Bewohnerin hat ein Colo- oder Ileostoma] angegeben, jedoch kein Wert im Datenfeld [53: 'Bewältigung der Folgen einer Stuhlinkontinenz (auch Umgang mit Stoma)']. Das Datenfeld [53: 'Bewältigung der Folgen einer Stuhlinkontinenz (auch Umgang mit Stoma)'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVSTUHLKONTINENZ"/>
						<das:field value="SVSTUHLKONTINENZBEW"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(SVSTUHLKONTINENZ/@value = (2,3,4)) and exists(SVSTUHLKONTINENZBEW/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60018"/>
					<das:rule_text value="Im Datenfeld [41: 'Darmkontrolle/Stuhlkontinenz'] ist [0 = ständig kontinent] oder [1 = überwiegend kontinent, gelegentlich inkontinent] angegeben und gleichzeitig ein Wert im Datenfeld [53: 'Bewältigung der Folgen einer Stuhlinkontinenz (auch Umgang mit Stoma)']. Im Datenfeld [53: 'Bewältigung der Folgen einer Stuhlinkontinenz (auch Umgang mit Stoma)'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVSTUHLKONTINENZ"/>
						<das:field value="SVSTUHLKONTINENZBEW"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = (1,2) and not(exists(DEKUBITUSSTADIUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60019"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [1 = ja, einmal] oder [2 = ja, mehrmals] angegeben, jedoch kein Wert im Datenfeld [61: 'Maximales Dekubitusstadium im Erhebungszeitraum']. Das Datenfeld [61: 'Maximales Dekubitusstadium im Erhebungszeitraum'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 0 and exists(DEKUBITUSSTADIUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60020"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [61: 'Maximales Dekubitusstadium im Erhebungszeitraum']. Im [61: 'Maximales Dekubitusstadium im Erhebungszeitraum'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 1 and DEKUBITUSSTADIUM/@value = (2,3,4,9) and exists(DEKUBITUS1LOK/@value) and DEKUBITUS1LOK/@value = 1 and not(exists(DEKUBITUS1BEGINNDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60021"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [1 = ja, einmal] und im Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?'] ist [1 = in der Pflegeeinrichtung] angegeben, jedoch kein Wert im Datenfeld [62: 'Datum: Beginn Dekubitus 1']. Das Datenfeld [62: 'Datum: Beginn Dekubitus 1'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
						<das:field value="DEKUBITUS1LOK"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 1 and DEKUBITUSSTADIUM/@value = (2,3,4,9) and not(exists(DEKUBITUS1ENDEDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60022"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [1 = ja, einmal] angegeben, jedoch kein Wert im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)']. Das Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 1 and DEKUBITUSSTADIUM/@value = (2,3,4,9) and not(exists(DEKUBITUS1LOK/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60023"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [1 = ja, einmal] angegeben, jedoch kein Wert im Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?']. Das Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1LOK"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 0 and exists(DEKUBITUS1BEGINNDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60024"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [62: 'Datum: Beginn Dekubitus 1']. Im Datenfeld [62: 'Datum: Beginn Dekubitus 1'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 0 and exists(DEKUBITUS1ENDEDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60025"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)']. Im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 0 and exists(DEKUBITUS1LOK/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60026"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?']. Im Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUSSTADIUM/@value = 1 and exists(DEKUBITUS1BEGINNDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60027"/>
					<das:rule_text value="Im Datenfeld [61: 'Maximales Dekubitusstadium im Erhebungszeitraum'] ist [1 = Kategorie/Stadium 1] angegeben und gleichzeitig ein Wert im Datenfeld [62: 'Datum: Beginn Dekubitus 1']. Im Datenfeld [62: 'Datum: Beginn Dekubitus 1'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUSSTADIUM/@value = 1 and exists(DEKUBITUS1ENDEDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60028"/>
					<das:rule_text value="Im Datenfeld [61: 'Maximales Dekubitusstadium im Erhebungszeitraum'] ist [1 = Kategorie/Stadium 1] angegeben und gleichzeitig ein Wert im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)']. Im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUSSTADIUM/@value = 1 and exists(DEKUBITUS1LOK/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60029"/>
					<das:rule_text value="Im Datenfeld [61: 'Maximales Dekubitusstadium im Erhebungszeitraum'] ist [1 = Kategorie/Stadium 1] angegeben und gleichzeitig ein Wert im Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?']. Im Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS1LOK"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = (0,1) and exists(DEKUBITUS2BEGINNDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60030"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [0 = nein] oder [1 = ja, einmal] angegeben und gleichzeitig ein Wert im Datenfeld [65: 'Datum: Beginn Dekubitus 2']. Im Datenfeld [65: 'Datum: Beginn Dekubitus 2'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS2BEGINNDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = (0,1) and exists(DEKUBITUS2ENDEDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60031"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [0 = nein] oder [1 = ja, einmal] angegeben und gleichzeitig ein Wert im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)']. Im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = (0,1) and exists(DEKUBITUS2LOK/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60032"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [0 = nein] oder [1 = ja, einmal] angegeben und gleichzeitig ein Wert im Datenfeld [67: 'Wo ist der Dekubitus 2 entstanden?']. Im Datenfeld [67: 'Wo ist der Dekubitus 2 entstanden?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS2LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and DEKUBITUSSTADIUM/@value = (2,3,4,9) and (exists(DEKUBITUS2BEGINNDATUM/@value) or exists(DEKUBITUS2ENDEDATUM/@value) or exists(DEKUBITUS2LOK/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60033"/>
					<das:rule_text value="Hinweis: Gab es mehr als zwei Dekubitusepisoden in den letzten 6 Monaten, sind die beiden zeitlich letzten zu berücksichtigen. Zum Dekubitus 2 sind nur dann Angaben zu machen, wenn es sich nicht um einen Dekubitus in Kategorie/Stadium 1 handelt. Bei Kategorie/Stadium 2, 3, 4 oder 'unbekannt' sollten entsprechend keine Angaben gemacht werden!"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS2BEGINNDATUM"/>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
						<das:field value="DEKUBITUS2LOK"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUSSTADIUM/@value = 1 and exists(DEKUBITUS2BEGINNDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60036"/>
					<das:rule_text value="Im Datenfeld [61: 'Maximales Dekubitusstadium im Erhebungszeitraum'] ist [1 = Kategorie/Stadium 1] angegeben und gleichzeitig ein Wert im Datenfeld [65: 'Datum: Beginn Dekubitus 2']. Im Datenfeld [65: 'Datum: Beginn Dekubitus 2'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2BEGINNDATUM"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUSSTADIUM/@value = 1 and exists(DEKUBITUS2ENDEDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60037"/>
					<das:rule_text value="Im Datenfeld [61: 'Maximales Dekubitusstadium im Erhebungszeitraum'] ist [1 = Kategorie/Stadium 1] angegeben und gleichzeitig ein Wert im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)']. Im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUSSTADIUM/@value = 1 and exists(DEKUBITUS2LOK/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60038"/>
					<das:rule_text value="Im Datenfeld [61: 'Maximales Dekubitusstadium im Erhebungszeitraum'] ist [1 = Kategorie/Stadium 1] angegeben und gleichzeitig ein Wert im Datenfeld [67: 'Wo ist der Dekubitus 2 entstanden?']. Im Datenfeld [67: 'Wo ist der Dekubitus 2 entstanden?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS2LOK"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(STURZ/@value = (1,2) and not(exists(STURZFOLGEN/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60039"/>
					<das:rule_text value="Im Datenfeld [71: 'Ist der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in der Einrichtung gestürzt?'] ist [1 = ja, einmal] oder [2 = ja, mehrmals] angegeben, jedoch kein Wert im Datenfeld [72: 'Welche Sturzfolgen sind aufgetreten?']. Das Datenfeld [72: 'Welche Sturzfolgen sind aufgetreten?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="STURZ"/>
						<das:field value="STURZFOLGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(STURZ/@value = (1,2)) and exists(STURZFOLGEN/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60040"/>
					<das:rule_text value="Im Datenfeld [71: 'Ist der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in der Einrichtung gestürzt?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [72: 'Welche Sturzfolgen sind aufgetreten?']. Im Datenfeld [72: 'Welche Sturzfolgen sind aufgetreten?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="STURZ"/>
						<das:field value="STURZFOLGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SCHMERZEN/@value != 1 and exists(SCHMERZFREI/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60045"/>
					<das:rule_text value="Im Datenfeld [75: 'Liegen bei dem Bewohner bzw. der Bewohnerin Anzeichen für länger andauernde Schmerzen vor (z.B. Äußerungen des Bewohners bzw. der Bewohnerin oder Einnahme von Analgetika)?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [76: 'Ist der Bewohner bzw. die Bewohnerin durch eine medikamentöse Schmerzbehandlung schmerzfrei?']. Im Datenfeld [76: 'Ist der Bewohner bzw. die Bewohnerin durch eine medikamentöse Schmerzbehandlung schmerzfrei?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEN"/>
						<das:field value="SCHMERZFREI"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SCHMERZEN/@value = 1 and not(exists(SCHMERZFREI/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60046"/>
					<das:rule_text value="Im Datenfeld [75: 'Liegen bei dem Bewohner bzw. der Bewohnerin Anzeichen für länger andauernde Schmerzen vor (z.B. Äußerungen des Bewohners bzw. der Bewohnerin oder Einnahme von Analgetika)?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [76: 'Ist der Bewohner bzw. die Bewohnerin durch eine medikamentöse Schmerzbehandlung schmerzfrei?']. Das Datenfeld [76: 'Ist der Bewohner bzw. die Bewohnerin durch eine medikamentöse Schmerzbehandlung schmerzfrei?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEN"/>
						<das:field value="SCHMERZFREI"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((SCHMERZFREI/@value != 0 or not(exists(SCHMERZFREI/@value))) and exists(SCHMERZEINSCH/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60047"/>
					<das:rule_text value="Im Datenfeld [76: 'Ist der Bewohner bzw. die Bewohnerin durch eine medikamentöse Schmerzbehandlung schmerzfrei?'] ist [1 = ja] angegeben und gleichzeitig ein Wert im Datenfeld [77: 'Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?']. Im Datenfeld [77: 'Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCH"/>
						<das:field value="SCHMERZFREI"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SCHMERZFREI/@value = 0 and not(exists(SCHMERZEINSCH/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60048"/>
					<das:rule_text value="Im Datenfeld [76: 'Ist der Bewohner bzw. die Bewohnerin durch eine medikamentöse Schmerzbehandlung schmerzfrei?'] ist [0 = nein] angegeben, jedoch kein Wert im Datenfeld [77: 'Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?']. Das Datenfeld [77: 'Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCH"/>
						<das:field value="SCHMERZFREI"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((SCHMERZEINSCH/@value != 1 or not(exists(SCHMERZEINSCH/@value))) and exists(SCHMERZEINSCHDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60049"/>
					<das:rule_text value="Im Datenfeld [77: 'Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [78: 'Datum: Dokumentation der Schmerzeinschätzung']. Im Datenfeld [78: 'Datum: Dokumentation der Schmerzeinschätzung'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCH"/>
						<das:field value="SCHMERZEINSCHDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((SCHMERZEINSCH/@value != 1 or not(exists(SCHMERZEINSCH/@value))) and exists(SCHMERZEINSCHINFO/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60050"/>
					<das:rule_text value="Im Datenfeld [77: 'Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [79: 'Welche Informationen liegen über die Ergebnisse dieser Schmerzeinschätzung vor?']. Im Datenfeld [79: 'Welche Informationen liegen über die Ergebnisse dieser Schmerzeinschätzung vor?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCH"/>
						<das:field value="SCHMERZEINSCHINFO"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SCHMERZEINSCH/@value = 1 and not(exists(SCHMERZEINSCHDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60051"/>
					<das:rule_text value="Im Datenfeld [77: 'Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [78: 'Datum: Dokumentation der Schmerzeinschätzung']. Das Datenfeld [78: 'Datum: Dokumentation der Schmerzeinschätzung'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCH"/>
						<das:field value="SCHMERZEINSCHDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SCHMERZEINSCH/@value = 1 and not(exists(SCHMERZEINSCHINFO/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60052"/>
					<das:rule_text value="Im Datenfeld [77: 'Wurde bei dem Bewohner bzw. der Bewohnerin eine differenzierte Schmerzeinschätzung vorgenommen?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [79: 'Welche Informationen liegen über die Ergebnisse dieser Schmerzeinschätzung vor?']. Das Datenfeld [79: 'Welche Informationen liegen über die Ergebnisse dieser Schmerzeinschätzung vor?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCH"/>
						<das:field value="SCHMERZEINSCHINFO"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((EINZUGNACHKZP/@value != 1 or not(exists(EINZUGNACHKZP/@value))) and exists(EINZUGNACHKZPDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60053"/>
					<das:rule_text value="Im Datenfeld [81: 'Erfolgte der Einzug direkt im Anschluss an einen Kurzzeit- bzw. Verhinderungspflegeaufenthalt in der Einrichtung (ohne zeitliche Lücke)?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [82: 'Datum: Beginn des Kurzzeit- bzw. Verhinderungspflegeaufenthalts']. Im Datenfeld [82: 'Datum: Beginn des Kurzzeit- bzw. Verhinderungspflegeaufenthalts'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGNACHKZP"/>
						<das:field value="EINZUGNACHKZPDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGNACHKZP/@value = 1 and not(exists(EINZUGNACHKZPDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60054"/>
					<das:rule_text value="Im Datenfeld [81: 'Erfolgte der Einzug direkt im Anschluss an einen Kurzzeit- bzw. Verhinderungspflegeaufenthalt in der Einrichtung (ohne zeitliche Lücke)?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [82: 'Datum: Beginn des Kurzzeit- bzw. Verhinderungspflegeaufenthalts']. Das Datenfeld [82: 'Datum: Beginn des Kurzzeit- bzw. Verhinderungspflegeaufenthalts'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGNACHKZP"/>
						<das:field value="EINZUGNACHKZPDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((EINZUGKHBEHANDLUNG/@value != 1 or not(exists(EINZUGKHBEHANDLUNG/@value))) and exists(EINZUGKHBEGINNDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60055"/>
					<das:rule_text value="Im Datenfeld [83: 'Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug']. Im Datenfeld [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEGINNDATUM"/>
						<das:field value="EINZUGKHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((EINZUGKHBEHANDLUNG/@value != 1 or not(exists(EINZUGKHBEHANDLUNG/@value))) and exists(EINZUGKHENDEDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60056"/>
					<das:rule_text value="Im Datenfeld [83: 'Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug']. Im Datenfeld [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEHANDLUNG"/>
						<das:field value="EINZUGKHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGKHBEHANDLUNG/@value = 1 and not(exists(EINZUGKHBEGINNDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60057"/>
					<das:rule_text value="Im Datenfeld [83: 'Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug']. Das Datenfeld [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEGINNDATUM"/>
						<das:field value="EINZUGKHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGKHBEHANDLUNG/@value = 1 and not(exists(EINZUGKHENDEDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60058"/>
					<das:rule_text value="Im Datenfeld [83: 'Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug']. Das Datenfeld [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEHANDLUNG"/>
						<das:field value="EINZUGKHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((EINZUGGESPR/@value != 1 or not(exists(EINZUGGESPR/@value))) and exists(EINZUGGESPRDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60059"/>
					<das:rule_text value="Im Datenfeld [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?'] ist [2 = nicht möglich aufgrund fehlender Vertrauenspersonen des Bewohners bzw. der Bewohnerin] oder [3 = nein, aus anderen Gründen] angegeben und gleichzeitig ein Wert im Datenfeld [87: 'Datum des Integrationsgesprächs']. Im Datenfeld [87: 'Datum des Integrationsgesprächs'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPR"/>
						<das:field value="EINZUGGESPRDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((EINZUGGESPR/@value != 1 or not(exists(EINZUGGESPR/@value))) and exists(EINZUGGESPRDOKU/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60060"/>
					<das:rule_text value="Im Datenfeld [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?'] ist [2 = nicht möglich aufgrund fehlender Vertrauenspersonen des Bewohners bzw. der Bewohnerin] oder [3 = nein, aus anderen Gründen] angegeben und gleichzeitig ein Wert im Datenfeld [89: 'Wurden die Ergebnisse dieses Gespräches dokumentiert?']. Im Datenfeld [89: 'Wurden die Ergebnisse dieses Gespräches dokumentiert?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPR"/>
						<das:field value="EINZUGGESPRDOKU"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((EINZUGGESPR/@value != 1 or not(exists(EINZUGGESPR/@value))) and exists(EINZUGGESPRTEILNEHMER/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60061"/>
					<das:rule_text value="Im Datenfeld [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?'] ist [2 = nicht möglich aufgrund fehlender Vertrauenspersonen des Bewohners bzw. der Bewohnerin] oder [3 = nein, aus anderen Gründen] angegeben und gleichzeitig ein Wert im Datenfeld [88: 'Wer hat an dem Integrationsgespräch teilgenommen?']. Im Datenfeld [88: 'Wer hat an dem Integrationsgespräch teilgenommen?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPR"/>
						<das:field value="EINZUGGESPRTEILNEHMER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGGESPR/@value = 1 and not(exists(EINZUGGESPRDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60062"/>
					<das:rule_text value="Im Datenfeld [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [87: 'Datum des Integrationsgesprächs']. Das Datenfeld [87: 'Datum des Integrationsgesprächs'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPR"/>
						<das:field value="EINZUGGESPRDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGGESPR/@value = 1 and not(exists(EINZUGGESPRDOKU/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60063"/>
					<das:rule_text value="Im Datenfeld [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [89: 'Wurden die Ergebnisse dieses Gespräches dokumentiert?']. Das Datenfeld [89: 'Wurden die Ergebnisse dieses Gespräches dokumentiert?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPR"/>
						<das:field value="EINZUGGESPRDOKU"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGGESPR/@value = 1 and not(exists(EINZUGGESPRTEILNEHMER/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60064"/>
					<das:rule_text value="Im Datenfeld [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [88: 'Wer hat an dem Integrationsgespräch teilgenommen?']. Das Datenfeld [88: 'Wer hat an dem Integrationsgespräch teilgenommen?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPR"/>
						<das:field value="EINZUGGESPRTEILNEHMER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((SVFREMDHILFE/@value != 1 or not(exists(SVFREMDHILFE/@value))) and exists(SVERNAEHRUNGUMFANG/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60069"/>
					<das:rule_text value="Im Datenfeld [38: 'Erfolgt die Bedienung selbständig oder mit Fremdhilfe?'] ist [0 = selbständig] angegeben und gleichzeitig ein Wert im Datenfeld [39: 'In welchem Umfang erfolgt eine künstliche Ernährung?']. Im Datenfeld [39: 'In welchem Umfang erfolgt eine künstliche Ernährung?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVERNAEHRUNGUMFANG"/>
						<das:field value="SVFREMDHILFE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(SVFREMDHILFE/@value = 1 and not(exists(SVERNAEHRUNGUMFANG/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60070"/>
					<das:rule_text value="Im Datenfeld [38: 'Erfolgt die Bedienung selbständig oder mit Fremdhilfe?'] ist [1 = mit Fremdhilfe] angegeben, jedoch kein Wert im Datenfeld [39: 'In welchem Umfang erfolgt eine künstliche Ernährung?']. Das Datenfeld [39: 'In welchem Umfang erfolgt eine künstliche Ernährung?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SVERNAEHRUNGUMFANG"/>
						<das:field value="SVFREMDHILFE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(NEUEINZUG/@value != 1 and exists(EINZUGGESPR/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60071"/>
					<das:rule_text value="Im Datenfeld [80: 'Ist der Bewohner bzw. die Bewohnerin nach der letzten Ergebniserfassung neu in die Einrichtung eingezogen?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?']. Im Datenfeld [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPR"/>
						<das:field value="NEUEINZUG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(NEUEINZUG/@value != 1 and exists(EINZUGKHBEHANDLUNG/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60072"/>
					<das:rule_text value="Im Datenfeld [80: 'Ist der Bewohner bzw. die Bewohnerin nach der letzten Ergebniserfassung neu in die Einrichtung eingezogen?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [83: 'Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?']. Im Datenfeld [83: 'Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEHANDLUNG"/>
						<das:field value="NEUEINZUG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(NEUEINZUG/@value != 1 and exists(EINZUGNACHKZP/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60073"/>
					<das:rule_text value="Im Datenfeld [80: 'Ist der Bewohner bzw. die Bewohnerin nach der letzten Ergebniserfassung neu in die Einrichtung eingezogen?'] ist [0 = nein] angegeben und gleichzeitig ein Wert im Datenfeld [81: 'Erfolgte der Einzug direkt im Anschluss an einen Kurzzeit- bzw. Verhinderungspflegeaufenthalt in der Einrichtung (ohne zeitliche Lücke)?']. Im Datenfeld [81: 'Erfolgte der Einzug direkt im Anschluss an einen Kurzzeit- bzw. Verhinderungspflegeaufenthalt in der Einrichtung (ohne zeitliche Lücke)?'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGNACHKZP"/>
						<das:field value="NEUEINZUG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(NEUEINZUG/@value = 1 and not(exists(EINZUGGESPR/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60074"/>
					<das:rule_text value="Im Datenfeld [80: 'Ist der Bewohner bzw. die Bewohnerin nach der letzten Ergebniserfassung neu in die Einrichtung eingezogen?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?']. Das Datenfeld [86: 'Ist in den Wochen nach dem Einzug mit dem Bewohner bzw. der Bewohnerin und/oder einer seiner bzw. ihrer Angehörigen oder sonstigen Vertrauenspersonen ein Gespräch über sein bzw. ihr Einleben und die zukünftige Versorgung geführt worden?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPR"/>
						<das:field value="NEUEINZUG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(NEUEINZUG/@value = 1 and not(exists(EINZUGKHBEHANDLUNG/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60075"/>
					<das:rule_text value="Im Datenfeld [80: 'Ist der Bewohner bzw. die Bewohnerin nach der letzten Ergebniserfassung neu in die Einrichtung eingezogen?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [83: 'Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?']. Das Datenfeld [83: 'Ist der Bewohner bzw. die Bewohnerin innerhalb der ersten 8 Wochen nach dem Einzug länger als drei Tage in einem Krankenhaus versorgt worden?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEHANDLUNG"/>
						<das:field value="NEUEINZUG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(NEUEINZUG/@value = 1 and not(exists(EINZUGNACHKZP/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60076"/>
					<das:rule_text value="Im Datenfeld [80: 'Ist der Bewohner bzw. die Bewohnerin nach der letzten Ergebniserfassung neu in die Einrichtung eingezogen?'] ist [1 = ja] angegeben, jedoch kein Wert im Datenfeld [81: 'Erfolgte der Einzug direkt im Anschluss an einen Kurzzeit- bzw. Verhinderungspflegeaufenthalt in der Einrichtung (ohne zeitliche Lücke)?']. Das Datenfeld [81: 'Erfolgte der Einzug direkt im Anschluss an einen Kurzzeit- bzw. Verhinderungspflegeaufenthalt in der Einrichtung (ohne zeitliche Lücke)?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGNACHKZP"/>
						<das:field value="NEUEINZUG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((some $v in KOERPERGEWICHTDOKU/@value satisfies $v = (4,5)) and exists(KOERPERGEWICHT/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60077"/>
					<das:rule_text value="Im Datenfeld [70: 'Welche der aufgeführten Punkte trafen laut Pflegedokumentation für den Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung zu?'] ist [4 = Aktuelles Gewicht liegt nicht vor. Bewohner bzw. Bewohnerin wird aufgrund einer Entscheidung des Arztes bzw. der Ärztin oder eines Betreuers bzw. einer Betreuerin bzw. des/der Bevollmächtigten nicht mehr gewogen] oder [5 = Aktuelles Gewicht liegt nicht vor. Bewohner bzw. Bewohnerin möchte nicht gewogen werden] angegeben und gleichzeitig ein Wert im Datenfeld [68: 'Aktuelles Körpergewicht in kg']. Im Datenfeld [68: 'Aktuelles Körpergewicht in kg'] darf in diesem Fall kein Wert angegeben werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHT"/>
						<das:field value="KOERPERGEWICHTDOKU"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(some $v in KOERPERGEWICHTDOKU/@value satisfies $v = (4,5)) and not(exists(KOERPERGEWICHT/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60078"/>
					<das:rule_text value="Im Datenfeld [70: 'Welche der aufgeführten Punkte trafen laut Pflegedokumentation für den Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung zu?'] ist [0 = Keine der angegebenen], [1 = Gewichtsverlust durch medikamentöse Ausschwemmung], [2 = Gewichtsverlust aufgrund ärztlich angeordneter oder ärztlich genehmigter Diät] oder [3 = Mindestens 10% Gewichtsverlust während eines Krankenhausaufenthalts] angegeben, jedoch kein Wert im Datenfeld [68: 'Aktuelles Körpergewicht in kg']. Das Datenfeld [68: 'Aktuelles Körpergewicht in kg'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHT"/>
						<das:field value="KOERPERGEWICHTDOKU"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(exists(KOERPERGEWICHT/@value) and not(exists(KOERPERGEWICHTDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60079"/>
					<das:rule_text value="Im Datenfeld [68: 'Aktuelles Körpergewicht in kg'] ist ein Wert, jedoch im Datenfeld [69: 'Datum: Dokumentation des Körpergewichts'] kein Wert angegeben. Das Datenfeld [69: 'Datum: Dokumentation des Körpergewichts'] ist in diesem Fall ein Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHT"/>
						<das:field value="KOERPERGEWICHTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(not(exists(KOERPERGEWICHT/@value)) and exists(KOERPERGEWICHTDATUM/@value)) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60080"/>
					<das:rule_text value="Im Datenfeld [68: 'Aktuelles Körpergewicht in kg'] ist kein Wert, jedoch im Datenfeld [69: 'Datum: Dokumentation des Körpergewichts'] ein Wert angegeben. Im Datenfeld [87: 'Datum des Integrationsgesprächs'] darf in diesem Fall keine Angabe gemacht werden"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHT"/>
						<das:field value="KOERPERGEWICHTDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and DEKUBITUSSTADIUM/@value = (2,3,4,9) and (exists(DEKUBITUS1BEGINNDATUM/@value) or exists(DEKUBITUS1ENDEDATUM/@value) or exists(DEKUBITUS1LOK/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60081"/>
					<das:rule_text value="Hinweis: Gab es mehr als zwei Dekubitusepisoden in den letzten 6 Monaten, sind die beiden zeitlich letzten zu berücksichtigen. Zum Dekubitus 1 sind nur dann Angaben zu machen, wenn es sich nicht um einen Dekubitus in Kategorie/Stadium 1 handelt. Bei Kategorie/Stadium 2, 3, 4 oder 'unbekannt' sollten entsprechend keine Angaben gemacht werden!"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
						<das:field value="DEKUBITUS1LOK"/>
						<das:field value="DEKUBITUSSTADIUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and exists(DEKUBITUS1BEGINNDATUM/@value) and not(exists(DEKUBITUS1ENDEDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60084"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [2 = ja, mehrmals] und zusätzlich ein Wert im Datenfeld [62: 'Datum: Beginn Dekubitus 1'] angegeben, jedoch kein Wert im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)']. Das Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)'] wird in diesem Fall zu einem Pflichtfeld und sollte im anderen Fall keine Angabe enthalten!"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and exists(DEKUBITUS1BEGINNDATUM/@value) and not(exists(DEKUBITUS1LOK/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60085"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [2 = ja, mehrmals] und zusätzlich ein Wert im Datenfeld [62: 'Datum: Beginn Dekubitus 1'] angegeben, jedoch kein Wert im Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?']. Das Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
						<das:field value="DEKUBITUS1LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and exists(DEKUBITUS1LOK/@value) and DEKUBITUS1LOK/@value = 1 and not(exists(DEKUBITUS1BEGINNDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60086"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [2 = ja, mehrmals] und im Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?'] ist [1 = in der Pflegeeinrichtung] angegeben, jedoch kein Wert im Datenfeld [62: 'Datum: Beginn Dekubitus 1']. Das Datenfeld [62: 'Datum: Beginn Dekubitus 1'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1BEGINNDATUM"/>
						<das:field value="DEKUBITUS1LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and exists(DEKUBITUS1ENDEDATUM/@value) and not(exists(DEKUBITUS1LOK/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60087"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [2 = ja, mehrmals] und zusätzlich ein Wert im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)'] angegeben, jedoch kein Wert im Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?']. Das Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
						<das:field value="DEKUBITUS1LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and exists(DEKUBITUS1LOK/@value) and not(exists(DEKUBITUS1ENDEDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60089"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [2 = ja, mehrmals] und zusätzlich ein Wert im Datenfeld [64: 'Wo ist der Dekubitus 1 entstanden?'] angegeben, jedoch kein Wert im Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)']. Das Datenfeld [63: 'Datum: Ende Dekubitus 1 (ggf. bis heute)'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS1ENDEDATUM"/>
						<das:field value="DEKUBITUS1LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and exists(DEKUBITUS2BEGINNDATUM/@value) and not(exists(DEKUBITUS2ENDEDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60090"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [2 = ja, mehrmals] und zusätzlich ein Wert im Datenfeld [65: 'Datum: Beginn Dekubitus 2'] angegeben, jedoch kein Wert im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)']. Das Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS2BEGINNDATUM"/>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and exists(DEKUBITUS2BEGINNDATUM/@value) and not(exists(DEKUBITUS2LOK/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60091"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [2 = ja, mehrmals] und zusätzlich ein Wert im Datenfeld [65: 'Datum: Beginn Dekubitus 2'] angegeben, jedoch kein Wert im Datenfeld [67: 'Wo ist der Dekubitus 2 entstanden?']. Das Datenfeld [67: 'Wo ist der Dekubitus 2 entstanden?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS2BEGINNDATUM"/>
						<das:field value="DEKUBITUS2LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and exists(DEKUBITUS2LOK/@value) and DEKUBITUS2LOK/@value = 1 and not(exists(DEKUBITUS2BEGINNDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60092"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [2 = ja, mehrmals] und im Datenfeld [67: 'Wo ist der Dekubitus 2 entstanden?'] ist [1 = in der Pflegeeinrichtung] angegeben, jedoch kein Wert im Datenfeld [65: 'Datum: Beginn Dekubitus 2']. Das Datenfeld [65: 'Datum: Beginn Dekubitus 2'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS2BEGINNDATUM"/>
						<das:field value="DEKUBITUS2LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and exists(DEKUBITUS2ENDEDATUM/@value) and not(exists(DEKUBITUS2LOK/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60093"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [2 = ja, mehrmals] und zusätzlich ein Wert im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)'] angegeben, jedoch kein Wert im Datenfeld [67: 'Wo ist der Dekubitus 2 entstanden?']. Das Datenfeld [67: 'Wo ist der Dekubitus 2 entstanden?'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
						<das:field value="DEKUBITUS2LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(DEKUBITUS/@value = 2 and exists(DEKUBITUS2LOK/@value) and not(exists(DEKUBITUS2ENDEDATUM/@value))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="60095"/>
					<das:rule_text value="Im Datenfeld [60: 'Hatte der Bewohner bzw. die Bewohnerin in der Zeit seit der letzten Ergebniserfassung einen Dekubitus?'] ist [2 = ja, mehrmals] und zusätzlich ein Wert im Datenfeld [67: 'Wo ist der Dekubitus 2 entstanden?'] angegeben, jedoch kein Wert im Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)']. Das Datenfeld [66: 'Datum: Ende Dekubitus 2 (ggf. bis heute)'] wird in diesem Fall zu einem Pflichtfeld"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DEKUBITUS"/>
						<das:field value="DEKUBITUS2ENDEDATUM"/>
						<das:field value="DEKUBITUS2LOK"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((some $v in DIAGNOSEN/@value satisfies $v = 0) and (some $v in DIAGNOSEN/@value satisfies $v = (1,2,3,4))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70001"/>
					<das:rule_text value="Im Datenfeld [20: 'Ärztliche Diagnosen für den Bewohner bzw. die Bewohnerin'] ist [0 = Keine der angegebenen] und ein weiterer Wert angegeben. Die Angabe dieser Kombination ist nicht zulässig"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="DIAGNOSEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((some $v in KOERPERGEWICHTDOKU/@value satisfies $v = 0) and (some $v in KOERPERGEWICHTDOKU/@value satisfies $v = (1,2,3,4,5))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70002"/>
					<das:rule_text value="Im Datenfeld [70: 'Welche der aufgeführten Punkte trafen laut Pflegedokumentation für den Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung zu?'] ist [0 = Keine der angegebenen] und ein weiterer Wert angegeben. Die Angabe dieser Kombination ist nicht zulässig"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="KOERPERGEWICHTDOKU"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((some $v in STURZFOLGEN/@value satisfies $v = 0) and (some $v in STURZFOLGEN/@value satisfies $v = (1,2,3,4))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70003"/>
					<das:rule_text value="Im Datenfeld [72: 'Welche Sturzfolgen sind aufgetreten?'] ist [0 = keine der genannten Folgen ist aufgetreten] und ein weiterer Wert angegeben. Die Angabe dieser Kombination ist nicht zulässig"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="STURZFOLGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((some $v in SCHMERZEINSCHINFO/@value satisfies $v = 0) and (some $v in SCHMERZEINSCHINFO/@value satisfies $v = (1,2,3,4))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70004"/>
					<das:rule_text value="Im Datenfeld [79: 'Welche Informationen liegen über die Ergebnisse dieser Schmerzeinschätzung vor?'] ist [0 = Es liegen keine Informationen vor] und ein weiterer Wert angegeben. Die Angabe dieser Kombination ist nicht zulässig"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="SCHMERZEINSCHINFO"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((some $v in EINZUGGESPRTEILNEHMER/@value satisfies $v = 0) and (some $v in EINZUGGESPRTEILNEHMER/@value satisfies $v = (1,2,3,4))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70005"/>
					<das:rule_text value="Im Datenfeld [88: 'Wer hat an dem Integrationsgespräch teilgenommen?'] ist [0 = Keine der angegebenen] und ein weiterer Wert angegeben. Die Angabe dieser Kombination ist nicht zulässig"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRTEILNEHMER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in EINZUGGESPRTEILNEHMER/@value satisfies $v = 1 and EINZUGGESPRDATUM/@value &gt; KHBEGINNDATUM/@value and EINZUGGESPRDATUM/@value &lt; KHENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70020"/>
					<das:rule_text value="Hinweis: Im Datenfeld [88: 'Wer hat an dem Integrationsgespräch teilgenommen?'] ist [1 = Bewohner/Bewohnerin] angegeben obwohl der Bewohner oder die Bewohnerin an diesem Datum anhand der Datumsangaben in den Datenfeldern [17: 'Datum: Beginn des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] und [18: 'Datum: Ende des Krankenhausaufenthalts (bei mehreren Aufenthalten bitte den Aufenthalt mit der längsten Dauer wählen)'] im Krankenhaus behandelt wurde (exkl. Aufnahme- und Entlassungstag)"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRDATUM"/>
						<das:field value="EINZUGGESPRTEILNEHMER"/>
						<das:field value="KHBEGINNDATUM"/>
						<das:field value="KHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in EINZUGGESPRTEILNEHMER/@value satisfies $v = 1 and EINZUGGESPRDATUM/@value &gt; EINZUGKHBEGINNDATUM/@value and EINZUGGESPRDATUM/@value &lt; EINZUGKHENDEDATUM/@value) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70021"/>
					<das:rule_text value="Hinweis: Im Datenfeld [88: 'Wer hat an dem Integrationsgespräch teilgenommen?'] ist [1 = Bewohner/Bewohnerin] angegeben obwohl der Bewohner oder die Bewohnerin an diesem Datum anhand der Datumsangaben in den Datenfeldern [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug'] und [85: 'Datum: Ende des Krankenhausaufenthalts direkt nach dem Einzug'] im Krankenhaus behandelt wurde (exkl. Aufnahme- und Entlassungstag)"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="EINZUGGESPRDATUM"/>
						<das:field value="EINZUGGESPRTEILNEHMER"/>
						<das:field value="EINZUGKHBEGINNDATUM"/>
						<das:field value="EINZUGKHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(APOPLEX/@value = 1 and KHBEHANDLUNG/@value = 0) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70023"/>
					<das:rule_text value="Hinweis: Im Datenfeld [8: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Apoplex gekommen?'] ist [1 = ja] angegeben aber im Datenfeld [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] ist [0 = nein] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="APOPLEX"/>
						<das:field value="KHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(FRAKTUR/@value = 1 and KHBEHANDLUNG/@value = 0) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70024"/>
					<das:rule_text value="Hinweis: Im Datenfeld [10: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Fraktur gekommen?'] ist [1 = ja] angegeben aber im Datenfeld [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] ist [0 = nein] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="FRAKTUR"/>
						<das:field value="KHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(HERZINFARKT/@value = 1 and KHBEHANDLUNG/@value = 0) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70025"/>
					<das:rule_text value="Hinweis: Im Datenfeld [12: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einem Herzinfarkt gekommen?'] ist [1 = ja] angegeben aber im Datenfeld [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] ist [0 = nein] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="HERZINFARKT"/>
						<das:field value="KHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(AMPUTATION/@value = 1 and KHBEHANDLUNG/@value = 0) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70026"/>
					<das:rule_text value="Hinweis: Im Datenfeld [14: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Amputation gekommen?'] ist [1 = ja] angegeben aber im Datenfeld [16: 'Wurde der Bewohner bzw. die Bewohnerin seit der letzten Ergebniserfassung in einem Krankenhaus behandelt?'] ist [0 = nein] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="AMPUTATION"/>
						<das:field value="KHBEHANDLUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(some $v in STURZFOLGEN/@value satisfies $v = 1 and FRAKTUR/@value = 0) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70027"/>
					<das:rule_text value="Hinweis: Im Datenfeld [72: 'Welche Sturzfolgen sind aufgetreten?'] ist [1 = Frakturen] angegeben aber im Datenfeld [10: 'Ist es bei dem Bewohner bzw. der Bewohnerin seit der letzten Ergebniserfassung zu einer Fraktur gekommen?'] ist [0 = nein] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="FRAKTUR"/>
						<das:field value="STURZFOLGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and MOBILPOSWECHSEL/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70028"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [21: 'Positionswechsel im Bett'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="MOBILPOSWECHSEL"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and MOBILSITZPOSITION/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70029"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [22: 'Halten einer stabilen Sitzposition'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="MOBILSITZPOSITION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and MOBILUMSETZEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70030"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [23: 'Sich Umsetzen'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="MOBILUMSETZEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and MOBILFORTBEWEGUNG/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70031"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [24: 'Fortbewegen innerhalb des Wohnbereichs'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="MOBILFORTBEWEGUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and MOBILTREPPENSTEIGEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70032"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [25: 'Treppensteigen'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="MOBILTREPPENSTEIGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFERKENNEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70033"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [26: 'Erkennen von Personen aus dem näheren Umfeld'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFERKENNEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFORIENTOERTLICH/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70034"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [27: 'Örtliche Orientierung'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFORIENTOERTLICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFORIENTZEITLICH/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70035"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [28: 'Zeitliche Orientierung'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFORIENTZEITLICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFERINNERN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70036"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [29: 'Sich Erinnern'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFERINNERN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFHANDLUNGEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70037"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [30: 'Steuern von mehrschrittigen Alltagshandlungen'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFHANDLUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFENTSCHEIDUNGEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70038"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [31: 'Treffen von Entscheidungen im Alltagsleben'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFENTSCHEIDUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFVERSTEHENINFO/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70039"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [32: 'Verstehen von Sachverhalten und Informationen'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFVERSTEHENINFO"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFGEFAHRERKENNEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70040"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [33: 'Erkennen von Risiken und Gefahren'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFGEFAHRERKENNEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFMITTEILEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70041"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [34: 'Mitteilen von elementaren Bedürfnissen'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFMITTEILEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFVERSTEHENAUF/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70042"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [35: 'Verstehen von Aufforderungen'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFVERSTEHENAUF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and KKFBETEILIGUNG/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70043"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [36: 'Beteiligung an einem Gespräch'] ist [0 = vorhanden/unbeeinträchtigt], [1 = größtenteils vorhanden] oder [2 = in geringem Maße vorhanden], d.h. entsprechend nicht [3 = nicht vorhanden] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="KKFBETEILIGUNG"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVOBERKOERPER/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70044"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [42: 'Waschen des vorderen Oberkörpers'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig] bzw. nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVOBERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVKOPF/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70045"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [43: 'Körperpflege im Bereich des Kopfes'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVKOPF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVINTIMBEREICH/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70046"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [44: 'Waschen des Intimbereichs'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVINTIMBEREICH"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVDUSCHENBADEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70047"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [45: 'Duschen oder Baden einschließlich Waschen der Haare'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVDUSCHENBADEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVANAUSOBERKOERPER/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70048"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [46: 'An- und Auskleiden des Oberkörpers'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVANAUSOBERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVANAUSUNTERKOERPER/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70049"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [47: 'An- und Auskleiden des Unterkörpers'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVANAUSUNTERKOERPER"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVNAHRUNGZUBEREITEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70050"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [48: 'Mundgerechtes Zubereiten der Nahrung, Eingießen von Getränken'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVNAHRUNGZUBEREITEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVESSEN/@value != 9) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70051"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [49: 'Essen'] ist [0 = selbständig], [2 = überwiegend selbständig] oder [4 = überwiegend unselbständig] bzw. nicht [6 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVESSEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVTRINKEN/@value != 6) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70052"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [50: 'Trinken'] ist [0 = selbständig], [2 = überwiegend selbständig] oder [4 = überwiegend unselbständig] bzw. nicht [6 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVTRINKEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVTOILETTE/@value != 6) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70053"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [51: 'Benutzen einer Toilette oder eines Toilettenstuhls'] ist [0 = selbständig], [2 = überwiegend selbständig] oder [4 = überwiegend unselbständig] bzw. nicht [6 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVTOILETTE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVHARNKONTINENZBEW/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70054"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [52: 'Bewältigung der Folgen einer Harninkontinenz (auch Umgang mit Dauerkatheter/Urostoma)'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVHARNKONTINENZBEW"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and SVSTUHLKONTINENZBEW/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70055"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [53: 'Bewältigung der Folgen einer Stuhlinkontinenz (auch Umgang mit Stoma)'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig] bzw. nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="SVSTUHLKONTINENZBEW"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and GATAGESABLAUF/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70056"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [54: 'Tagesablauf gestalten und an Veränderungen anpassen'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="GATAGESABLAUF"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and GARUHENSCHLAFEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70057"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [55: 'Ruhen und Schlafen'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="GARUHENSCHLAFEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and GABESCHAEFTIGEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70058"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [56: 'Sich beschäftigen'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="GABESCHAEFTIGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and GAPLANUNGEN/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70059"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [57: 'In die Zukunft gerichtete Planungen vornehmen'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="GAPLANUNGEN"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and GAINTERAKTION/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70060"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [58: 'Interaktion mit Personen im direkten Kontakt'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="GAINTERAKTION"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(BEWUSSTSEINSZUSTAND/@value = (4,5) and GAKONTAKTPFLEGE/@value != 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70061"/>
					<das:rule_text value="Hinweis: Im Datenfeld [19: 'Bewusstseinszustand des Bewohners bzw. der Bewohnerin'] ist [4 = komatös] oder [5 = Wachkoma] angegeben und im Datenfeld [59: 'Kontaktpflege zu Personen außerhalb des direkten Umfeldes'] ist [0 = selbständig], [1 = überwiegend selbständig] oder [2 = überwiegend unselbständig], d.h. entsprechend nicht [3 = unselbständig] angegeben. Die Kombination ist in der Regel eher unwahrscheinlich"/>
					<das:rule_type value="WARNING"/>
					<das:rule_fields>
						<das:field value="BEWUSSTSEINSZUSTAND"/>
						<das:field value="GAKONTAKTPFLEGE"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if(EINZUGKHBEGINNDATUM/@value &gt; (xs:date(EINZUGSDATUM/@value) + xs:dayTimeDuration('P56D'))) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70067"/>
					<das:rule_text value="Das Datum im Datenfeld [84: 'Datum: Beginn des Krankenhausaufenthalts direkt nach dem Einzug'] liegt länger als 8 Wochen (= 56 Tage) nach dem Datum im Datenfeld [4: 'Datum des Einzugs (Beginn der vollstationären Langzeitpflege)']"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEGINNDATUM"/>
						<das:field value="EINZUGSDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
		<xs:assert test="if((days-from-duration(xs:date(EINZUGKHENDEDATUM/@value) - xs:date(EINZUGKHBEGINNDATUM/@value)) + 1) &lt; 3) then false() else true()">
			<xs:annotation>
				<xs:appinfo>
					<das:rule_id value="70068"/>
					<das:rule_text value="Der angegebene Krankenhausaufenthalt innerhalb von 8 Wochen direkt nach dem Einzug ist kürzer als 3 Tage (inkl. Aufnahme- und Entlassungstag)"/>
					<das:rule_type value="ERROR"/>
					<das:rule_fields>
						<das:field value="EINZUGKHBEGINNDATUM"/>
						<das:field value="EINZUGKHENDEDATUM"/>
					</das:rule_fields>
				</xs:appinfo>
			</xs:annotation>
		</xs:assert>
	</xs:complexType>
</xs:schema>
